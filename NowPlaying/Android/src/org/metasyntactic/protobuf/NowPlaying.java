// Generated by the protocol buffer compiler.  DO NOT EDIT!
package org.metasyntactic.protobuf;

public final class NowPlaying {
  private NowPlaying() {
  }

  public static com.google.protobuf.Descriptors.FileDescriptor getDescriptor() {
    return descriptor;
  }

  private static final com.google.protobuf.Descriptors.FileDescriptor descriptor = buildDescriptor();

  private static com.google.protobuf.Descriptors.FileDescriptor buildDescriptor() {
    final java.lang.String descriptorData = "\n\020NowPlaying.proto\"M\n\rShowtimeProto\022\014\n\004T" + "ime\030\001 \002(\t\022\013\n\003Url\030\002 \001(\t\022\016\n\006Dubbed\030\003 \003(\t\022\021" + "\n\tSubtitled\030\004 \003(\t\"Z\n\021AllShowtimesProto\022!" + "\n\tShowtimes\030\001 \003(\0132\016.ShowtimeProto\022\016\n\006Ven" + "dor\030\002 \001(\t\022\022\n\nCaptioning\030\003 \001(\t\"\200\002\n\nMovieP" + "roto\022\022\n\nIdentifier\030\001 \001(\t\022\r\n\005Title\030\002 \001(\t\022" + "\016\n\006Length\030\003 \001(\005\022\020\n\010Language\030\004 \001(\t\022\r\n\005Gen" + "re\030\005 \001(\t\022\023\n\013Description\030\006 \001(\t\022\021\n\tRawRati" + "ng\030\010 \001(\t\022\r\n\005Score\030\t \001(\005\022\017\n\007IMDbUrl\030\n \001(\t" + "\022\020\n\010Director\030\013 \003(\t\022\014\n\004Cast\030\014 \003(\t\022\016\n\006Dubb" + "ed\030\r \003(\t\022\021\n\tSubtitled\030\016 \003(\t\022\023\n\013ReleaseDa" + "te\030\017 \001(\t\"\275\001\n\014TheaterProto\022\022\n\nIdentifier\030" + "\001 \001(\t\022\014\n\004Name\030\002 \001(\t\022\025\n\rStreetAddress\030\003 \001" + "(\t\022\014\n\004City\030\004 \001(\t\022\r\n\005State\030\005 \001(\t\022\022\n\nPosta" + "lCode\030\006 \001(\t\022\017\n\007Country\030\007 \001(\t\022\r\n\005Phone\030\010 " + "\001(\t\022\020\n\010Latitude\030\t \001(\001\022\021\n\tLongitude\030\n \001(\001" + "\"\215\003\n\024TheaterListingsProto\022\033\n\006Movies\030\005 \003(" + "\0132\013.MovieProto\022U\n\030TheaterAndMovieShowtim" + "es\030\006 \003(\01323.TheaterListingsProto.TheaterA" + "ndMovieShowtimesProto\032\200\002\n\035TheaterAndMovi" + "eShowtimesProto\022\036\n\007Theater\030\003 \002(\0132\r.Theat" + "erProto\022e\n\021MovieAndShowtimes\030\004 \003(\0132J.The" + "aterListingsProto.TheaterAndMovieShowtim" + "esProto.MovieAndShowtimesProto\032X\n\026MovieA" + "ndShowtimesProto\022\027\n\017MovieIdentifier\030\001 \002(" + "\t\022%\n\tShowtimes\030\002 \002(\0132\022.AllShowtimesProto" + "\"\214\001\n\013ReviewProto\022\r\n\005Title\030\001 \001(\t\022\013\n\003Url\030\002" + " \001(\t\022\016\n\006Rating\030\003 \001(\002\022\017\n\007Snippet\030\004 \001(\t\022\017\n" + "\007Content\030\005 \001(\t\022\021\n\tPublisher\030\006 \001(\t\022\016\n\006Aut" + "hor\030\007 \001(\t\022\014\n\004Date\030\010 \001(\t\"1\n\020ReviewsListPr" + "oto\022\035\n\007reviews\030\001 \003(\0132\014.ReviewProtoB\002H\001";
    try {
      return com.google.protobuf.Descriptors.FileDescriptor
        .internalBuildGeneratedFileFrom(descriptorData, new com.google.protobuf.Descriptors.FileDescriptor[]{});
    } catch (final Exception e) {
      throw new RuntimeException("Failed to parse protocol buffer descriptor for " + "\"NowPlaying.proto\".", e);
    }
  }

  public static final class ShowtimeProto extends com.google.protobuf.GeneratedMessage {
    // Use ShowtimeProto.newBuilder() to construct.
    private ShowtimeProto() {
    }

    private static final ShowtimeProto defaultInstance = new ShowtimeProto();

    public static ShowtimeProto getDefaultInstance() {
      return defaultInstance;
    }

    public ShowtimeProto getDefaultInstanceForType() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return NowPlaying.internal_static_ShowtimeProto_descriptor;
    }

    @Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
      return NowPlaying.internal_static_ShowtimeProto_fieldAccessorTable;
    }

    // required string Time = 1;
    private boolean hasTime;
    private java.lang.String time_ = "";

    public boolean hasTime() {
      return this.hasTime;
    }

    public java.lang.String getTime() {
      return this.time_;
    }

    // optional string Url = 2;
    private boolean hasUrl;
    private java.lang.String url_ = "";

    public boolean hasUrl() {
      return this.hasUrl;
    }

    public java.lang.String getUrl() {
      return this.url_;
    }

    // repeated string Dubbed = 3;
    private java.util.List<java.lang.String> dubbed_ = java.util.Collections.emptyList();

    public java.util.List<java.lang.String> getDubbedList() {
      return this.dubbed_;
    }

    public int getDubbedCount() {
      return this.dubbed_.size();
    }

    public java.lang.String getDubbed(final int index) {
      return this.dubbed_.get(index);
    }

    // repeated string Subtitled = 4;
    private java.util.List<java.lang.String> subtitled_ = java.util.Collections.emptyList();

    public java.util.List<java.lang.String> getSubtitledList() {
      return this.subtitled_;
    }

    public int getSubtitledCount() {
      return this.subtitled_.size();
    }

    public java.lang.String getSubtitled(final int index) {
      return this.subtitled_.get(index);
    }

    @Override
    public final boolean isInitialized() {
      if (!this.hasTime) {
        return false;
      }
      return true;
    }

    @Override
    public void writeTo(final com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (hasTime()) {
        output.writeString(1, getTime());
      }
      if (hasUrl()) {
        output.writeString(2, getUrl());
      }
      for (final java.lang.String element : getDubbedList()) {
        output.writeString(3, element);
      }
      for (final java.lang.String element : getSubtitledList()) {
        output.writeString(4, element);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;

    @Override
    public int getSerializedSize() {
      int size = this.memoizedSerializedSize;
      if (size != -1) {
        return size;
      }

      size = 0;
      if (hasTime()) {
        size += com.google.protobuf.CodedOutputStream.computeStringSize(1, getTime());
      }
      if (hasUrl()) {
        size += com.google.protobuf.CodedOutputStream.computeStringSize(2, getUrl());
      }
      for (final java.lang.String element : getDubbedList()) {
        size += com.google.protobuf.CodedOutputStream.computeStringSize(3, element);
      }
      for (final java.lang.String element : getSubtitledList()) {
        size += com.google.protobuf.CodedOutputStream.computeStringSize(4, element);
      }
      size += getUnknownFields().getSerializedSize();
      this.memoizedSerializedSize = size;
      return size;
    }

    public static NowPlaying.ShowtimeProto parseFrom(final com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static NowPlaying.ShowtimeProto parseFrom(final com.google.protobuf.ByteString data,
      final com.google.protobuf.ExtensionRegistry extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static NowPlaying.ShowtimeProto parseFrom(final byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static NowPlaying.ShowtimeProto parseFrom(final byte[] data, final com.google.protobuf.ExtensionRegistry extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static NowPlaying.ShowtimeProto parseFrom(final java.io.InputStream input) throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static NowPlaying.ShowtimeProto parseFrom(final java.io.InputStream input, final com.google.protobuf.ExtensionRegistry extensionRegistry)
      throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static NowPlaying.ShowtimeProto parseFrom(final com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static NowPlaying.ShowtimeProto parseFrom(final com.google.protobuf.CodedInputStream input,
      final com.google.protobuf.ExtensionRegistry extensionRegistry) throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static Builder newBuilder() {
      return new Builder();
    }

    public Builder newBuilderForType() {
      return new Builder();
    }

    public static Builder newBuilder(final NowPlaying.ShowtimeProto prototype) {
      return new Builder().mergeFrom(prototype);
    }

    public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> {
      // Construct using NowPlaying.ShowtimeProto.newBuilder()
      private Builder() {
      }

      NowPlaying.ShowtimeProto result = new NowPlaying.ShowtimeProto();

      @Override
      protected NowPlaying.ShowtimeProto internalGetResult() {
        return this.result;
      }

      @Override
      public Builder clear() {
        this.result = new NowPlaying.ShowtimeProto();
        return this;
      }

      @Override
      public Builder clone() {
        return new Builder().mergeFrom(this.result);
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return NowPlaying.ShowtimeProto.getDescriptor();
      }

      public NowPlaying.ShowtimeProto getDefaultInstanceForType() {
        return NowPlaying.ShowtimeProto.getDefaultInstance();
      }

      public NowPlaying.ShowtimeProto build() {
        if (!isInitialized()) {
          throw new com.google.protobuf.UninitializedMessageException(this.result);
        }
        return buildPartial();
      }

      private NowPlaying.ShowtimeProto buildParsed() throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw new com.google.protobuf.UninitializedMessageException(this.result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }

      public NowPlaying.ShowtimeProto buildPartial() {
        if (this.result.dubbed_ != java.util.Collections.EMPTY_LIST) {
          this.result.dubbed_ = java.util.Collections.unmodifiableList(this.result.dubbed_);
        }
        if (this.result.subtitled_ != java.util.Collections.EMPTY_LIST) {
          this.result.subtitled_ = java.util.Collections.unmodifiableList(this.result.subtitled_);
        }
        final NowPlaying.ShowtimeProto returnMe = this.result;
        this.result = null;
        return returnMe;
      }

      @Override
      public Builder mergeFrom(final com.google.protobuf.Message other) {
        if (other instanceof NowPlaying.ShowtimeProto) {
          return mergeFrom((NowPlaying.ShowtimeProto) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(final NowPlaying.ShowtimeProto other) {
        if (other == NowPlaying.ShowtimeProto.getDefaultInstance()) {
          return this;
        }
        if (other.hasTime()) {
          setTime(other.getTime());
        }
        if (other.hasUrl()) {
          setUrl(other.getUrl());
        }
        if (!other.dubbed_.isEmpty()) {
          if (this.result.dubbed_.isEmpty()) {
            this.result.dubbed_ = new java.util.ArrayList<java.lang.String>();
          }
          this.result.dubbed_.addAll(other.dubbed_);
        }
        if (!other.subtitled_.isEmpty()) {
          if (this.result.subtitled_.isEmpty()) {
            this.result.subtitled_ = new java.util.ArrayList<java.lang.String>();
          }
          this.result.subtitled_.addAll(other.subtitled_);
        }
        mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      @Override
      public Builder mergeFrom(final com.google.protobuf.CodedInputStream input) throws java.io.IOException {
        return mergeFrom(input, com.google.protobuf.ExtensionRegistry.getEmptyRegistry());
      }

      @Override
      public Builder mergeFrom(final com.google.protobuf.CodedInputStream input, final com.google.protobuf.ExtensionRegistry extensionRegistry)
        throws java.io.IOException {
        final com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder(getUnknownFields());
        while (true) {
          final int tag = input.readTag();
          switch (tag) {
            case 0:
              setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setTime(input.readString());
              break;
            }
            case 18: {
              setUrl(input.readString());
              break;
            }
            case 26: {
              addDubbed(input.readString());
              break;
            }
            case 34: {
              addSubtitled(input.readString());
              break;
            }
          }
        }
      }

      // required string Time = 1;
      public boolean hasTime() {
        return this.result.hasTime();
      }

      public java.lang.String getTime() {
        return this.result.getTime();
      }

      public Builder setTime(final java.lang.String value) {
        this.result.hasTime = true;
        this.result.time_ = value;
        return this;
      }

      public Builder clearTime() {
        this.result.hasTime = false;
        this.result.time_ = "";
        return this;
      }

      // optional string Url = 2;
      public boolean hasUrl() {
        return this.result.hasUrl();
      }

      public java.lang.String getUrl() {
        return this.result.getUrl();
      }

      public Builder setUrl(final java.lang.String value) {
        this.result.hasUrl = true;
        this.result.url_ = value;
        return this;
      }

      public Builder clearUrl() {
        this.result.hasUrl = false;
        this.result.url_ = "";
        return this;
      }

      // repeated string Dubbed = 3;
      public java.util.List<java.lang.String> getDubbedList() {
        return java.util.Collections.unmodifiableList(this.result.dubbed_);
      }

      public int getDubbedCount() {
        return this.result.getDubbedCount();
      }

      public java.lang.String getDubbed(final int index) {
        return this.result.getDubbed(index);
      }

      public Builder setDubbed(final int index, final java.lang.String value) {
        this.result.dubbed_.set(index, value);
        return this;
      }

      public Builder addDubbed(final java.lang.String value) {
        if (this.result.dubbed_.isEmpty()) {
          this.result.dubbed_ = new java.util.ArrayList<java.lang.String>();
        }
        this.result.dubbed_.add(value);
        return this;
      }

      public Builder addAllDubbed(final java.lang.Iterable<? extends java.lang.String> values) {
        if (this.result.dubbed_.isEmpty()) {
          this.result.dubbed_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, this.result.dubbed_);
        return this;
      }

      public Builder clearDubbed() {
        this.result.dubbed_ = java.util.Collections.emptyList();
        return this;
      }

      // repeated string Subtitled = 4;
      public java.util.List<java.lang.String> getSubtitledList() {
        return java.util.Collections.unmodifiableList(this.result.subtitled_);
      }

      public int getSubtitledCount() {
        return this.result.getSubtitledCount();
      }

      public java.lang.String getSubtitled(final int index) {
        return this.result.getSubtitled(index);
      }

      public Builder setSubtitled(final int index, final java.lang.String value) {
        this.result.subtitled_.set(index, value);
        return this;
      }

      public Builder addSubtitled(final java.lang.String value) {
        if (this.result.subtitled_.isEmpty()) {
          this.result.subtitled_ = new java.util.ArrayList<java.lang.String>();
        }
        this.result.subtitled_.add(value);
        return this;
      }

      public Builder addAllSubtitled(final java.lang.Iterable<? extends java.lang.String> values) {
        if (this.result.subtitled_.isEmpty()) {
          this.result.subtitled_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, this.result.subtitled_);
        return this;
      }

      public Builder clearSubtitled() {
        this.result.subtitled_ = java.util.Collections.emptyList();
        return this;
      }
    }
  }

  public static final class AllShowtimesProto extends com.google.protobuf.GeneratedMessage {
    // Use AllShowtimesProto.newBuilder() to construct.
    private AllShowtimesProto() {
    }

    private static final AllShowtimesProto defaultInstance = new AllShowtimesProto();

    public static AllShowtimesProto getDefaultInstance() {
      return defaultInstance;
    }

    public AllShowtimesProto getDefaultInstanceForType() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return NowPlaying.internal_static_AllShowtimesProto_descriptor;
    }

    @Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
      return NowPlaying.internal_static_AllShowtimesProto_fieldAccessorTable;
    }

    // repeated .ShowtimeProto Showtimes = 1;
    private java.util.List<NowPlaying.ShowtimeProto> showtimes_ = java.util.Collections.emptyList();

    public java.util.List<NowPlaying.ShowtimeProto> getShowtimesList() {
      return this.showtimes_;
    }

    public int getShowtimesCount() {
      return this.showtimes_.size();
    }

    public NowPlaying.ShowtimeProto getShowtimes(final int index) {
      return this.showtimes_.get(index);
    }

    // optional string Vendor = 2;
    private boolean hasVendor;
    private java.lang.String vendor_ = "";

    public boolean hasVendor() {
      return this.hasVendor;
    }

    public java.lang.String getVendor() {
      return this.vendor_;
    }

    // optional string Captioning = 3;
    private boolean hasCaptioning;
    private java.lang.String captioning_ = "";

    public boolean hasCaptioning() {
      return this.hasCaptioning;
    }

    public java.lang.String getCaptioning() {
      return this.captioning_;
    }

    @Override
    public final boolean isInitialized() {
      for (final NowPlaying.ShowtimeProto element : getShowtimesList()) {
        if (!element.isInitialized()) {
          return false;
        }
      }
      return true;
    }

    @Override
    public void writeTo(final com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      for (final NowPlaying.ShowtimeProto element : getShowtimesList()) {
        output.writeMessage(1, element);
      }
      if (hasVendor()) {
        output.writeString(2, getVendor());
      }
      if (hasCaptioning()) {
        output.writeString(3, getCaptioning());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;

    @Override
    public int getSerializedSize() {
      int size = this.memoizedSerializedSize;
      if (size != -1) {
        return size;
      }

      size = 0;
      for (final NowPlaying.ShowtimeProto element : getShowtimesList()) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(1, element);
      }
      if (hasVendor()) {
        size += com.google.protobuf.CodedOutputStream.computeStringSize(2, getVendor());
      }
      if (hasCaptioning()) {
        size += com.google.protobuf.CodedOutputStream.computeStringSize(3, getCaptioning());
      }
      size += getUnknownFields().getSerializedSize();
      this.memoizedSerializedSize = size;
      return size;
    }

    public static NowPlaying.AllShowtimesProto parseFrom(final com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static NowPlaying.AllShowtimesProto parseFrom(final com.google.protobuf.ByteString data,
      final com.google.protobuf.ExtensionRegistry extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static NowPlaying.AllShowtimesProto parseFrom(final byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static NowPlaying.AllShowtimesProto parseFrom(final byte[] data, final com.google.protobuf.ExtensionRegistry extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static NowPlaying.AllShowtimesProto parseFrom(final java.io.InputStream input) throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static NowPlaying.AllShowtimesProto parseFrom(final java.io.InputStream input,
      final com.google.protobuf.ExtensionRegistry extensionRegistry) throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static NowPlaying.AllShowtimesProto parseFrom(final com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static NowPlaying.AllShowtimesProto parseFrom(final com.google.protobuf.CodedInputStream input,
      final com.google.protobuf.ExtensionRegistry extensionRegistry) throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static Builder newBuilder() {
      return new Builder();
    }

    public Builder newBuilderForType() {
      return new Builder();
    }

    public static Builder newBuilder(final NowPlaying.AllShowtimesProto prototype) {
      return new Builder().mergeFrom(prototype);
    }

    public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> {
      // Construct using NowPlaying.AllShowtimesProto.newBuilder()
      private Builder() {
      }

      NowPlaying.AllShowtimesProto result = new NowPlaying.AllShowtimesProto();

      @Override
      protected NowPlaying.AllShowtimesProto internalGetResult() {
        return this.result;
      }

      @Override
      public Builder clear() {
        this.result = new NowPlaying.AllShowtimesProto();
        return this;
      }

      @Override
      public Builder clone() {
        return new Builder().mergeFrom(this.result);
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return NowPlaying.AllShowtimesProto.getDescriptor();
      }

      public NowPlaying.AllShowtimesProto getDefaultInstanceForType() {
        return NowPlaying.AllShowtimesProto.getDefaultInstance();
      }

      public NowPlaying.AllShowtimesProto build() {
        if (!isInitialized()) {
          throw new com.google.protobuf.UninitializedMessageException(this.result);
        }
        return buildPartial();
      }

      private NowPlaying.AllShowtimesProto buildParsed() throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw new com.google.protobuf.UninitializedMessageException(this.result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }

      public NowPlaying.AllShowtimesProto buildPartial() {
        if (this.result.showtimes_ != java.util.Collections.EMPTY_LIST) {
          this.result.showtimes_ = java.util.Collections.unmodifiableList(this.result.showtimes_);
        }
        final NowPlaying.AllShowtimesProto returnMe = this.result;
        this.result = null;
        return returnMe;
      }

      @Override
      public Builder mergeFrom(final com.google.protobuf.Message other) {
        if (other instanceof NowPlaying.AllShowtimesProto) {
          return mergeFrom((NowPlaying.AllShowtimesProto) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(final NowPlaying.AllShowtimesProto other) {
        if (other == NowPlaying.AllShowtimesProto.getDefaultInstance()) {
          return this;
        }
        if (!other.showtimes_.isEmpty()) {
          if (this.result.showtimes_.isEmpty()) {
            this.result.showtimes_ = new java.util.ArrayList<NowPlaying.ShowtimeProto>();
          }
          this.result.showtimes_.addAll(other.showtimes_);
        }
        if (other.hasVendor()) {
          setVendor(other.getVendor());
        }
        if (other.hasCaptioning()) {
          setCaptioning(other.getCaptioning());
        }
        mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      @Override
      public Builder mergeFrom(final com.google.protobuf.CodedInputStream input) throws java.io.IOException {
        return mergeFrom(input, com.google.protobuf.ExtensionRegistry.getEmptyRegistry());
      }

      @Override
      public Builder mergeFrom(final com.google.protobuf.CodedInputStream input, final com.google.protobuf.ExtensionRegistry extensionRegistry)
        throws java.io.IOException {
        final com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder(getUnknownFields());
        while (true) {
          final int tag = input.readTag();
          switch (tag) {
            case 0:
              setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              final NowPlaying.ShowtimeProto.Builder subBuilder = NowPlaying.ShowtimeProto.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addShowtimes(subBuilder.buildPartial());
              break;
            }
            case 18: {
              setVendor(input.readString());
              break;
            }
            case 26: {
              setCaptioning(input.readString());
              break;
            }
          }
        }
      }

      // repeated .ShowtimeProto Showtimes = 1;
      public java.util.List<NowPlaying.ShowtimeProto> getShowtimesList() {
        return java.util.Collections.unmodifiableList(this.result.showtimes_);
      }

      public int getShowtimesCount() {
        return this.result.getShowtimesCount();
      }

      public NowPlaying.ShowtimeProto getShowtimes(final int index) {
        return this.result.getShowtimes(index);
      }

      public Builder setShowtimes(final int index, final NowPlaying.ShowtimeProto value) {
        this.result.showtimes_.set(index, value);
        return this;
      }

      public Builder setShowtimes(final int index, final NowPlaying.ShowtimeProto.Builder builderForValue) {
        this.result.showtimes_.set(index, builderForValue.build());
        return this;
      }

      public Builder addShowtimes(final NowPlaying.ShowtimeProto value) {
        if (this.result.showtimes_.isEmpty()) {
          this.result.showtimes_ = new java.util.ArrayList<NowPlaying.ShowtimeProto>();
        }
        this.result.showtimes_.add(value);
        return this;
      }

      public Builder addShowtimes(final NowPlaying.ShowtimeProto.Builder builderForValue) {
        if (this.result.showtimes_.isEmpty()) {
          this.result.showtimes_ = new java.util.ArrayList<NowPlaying.ShowtimeProto>();
        }
        this.result.showtimes_.add(builderForValue.build());
        return this;
      }

      public Builder addAllShowtimes(final java.lang.Iterable<? extends NowPlaying.ShowtimeProto> values) {
        if (this.result.showtimes_.isEmpty()) {
          this.result.showtimes_ = new java.util.ArrayList<NowPlaying.ShowtimeProto>();
        }
        super.addAll(values, this.result.showtimes_);
        return this;
      }

      public Builder clearShowtimes() {
        this.result.showtimes_ = java.util.Collections.emptyList();
        return this;
      }

      // optional string Vendor = 2;
      public boolean hasVendor() {
        return this.result.hasVendor();
      }

      public java.lang.String getVendor() {
        return this.result.getVendor();
      }

      public Builder setVendor(final java.lang.String value) {
        this.result.hasVendor = true;
        this.result.vendor_ = value;
        return this;
      }

      public Builder clearVendor() {
        this.result.hasVendor = false;
        this.result.vendor_ = "";
        return this;
      }

      // optional string Captioning = 3;
      public boolean hasCaptioning() {
        return this.result.hasCaptioning();
      }

      public java.lang.String getCaptioning() {
        return this.result.getCaptioning();
      }

      public Builder setCaptioning(final java.lang.String value) {
        this.result.hasCaptioning = true;
        this.result.captioning_ = value;
        return this;
      }

      public Builder clearCaptioning() {
        this.result.hasCaptioning = false;
        this.result.captioning_ = "";
        return this;
      }
    }
  }

  public static final class MovieProto extends com.google.protobuf.GeneratedMessage {
    // Use MovieProto.newBuilder() to construct.
    private MovieProto() {
    }

    private static final MovieProto defaultInstance = new MovieProto();

    public static MovieProto getDefaultInstance() {
      return defaultInstance;
    }

    public MovieProto getDefaultInstanceForType() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return NowPlaying.internal_static_MovieProto_descriptor;
    }

    @Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
      return NowPlaying.internal_static_MovieProto_fieldAccessorTable;
    }

    // optional string Identifier = 1;
    private boolean hasIdentifier;
    private java.lang.String identifier_ = "";

    public boolean hasIdentifier() {
      return this.hasIdentifier;
    }

    public java.lang.String getIdentifier() {
      return this.identifier_;
    }

    // optional string Title = 2;
    private boolean hasTitle;
    private java.lang.String title_ = "";

    public boolean hasTitle() {
      return this.hasTitle;
    }

    public java.lang.String getTitle() {
      return this.title_;
    }

    // optional int32 Length = 3;
    private boolean hasLength;
    private int length_ = 0;

    public boolean hasLength() {
      return this.hasLength;
    }

    public int getLength() {
      return this.length_;
    }

    // optional string Language = 4;
    private boolean hasLanguage;
    private java.lang.String language_ = "";

    public boolean hasLanguage() {
      return this.hasLanguage;
    }

    public java.lang.String getLanguage() {
      return this.language_;
    }

    // optional string Genre = 5;
    private boolean hasGenre;
    private java.lang.String genre_ = "";

    public boolean hasGenre() {
      return this.hasGenre;
    }

    public java.lang.String getGenre() {
      return this.genre_;
    }

    // optional string Description = 6;
    private boolean hasDescription;
    private java.lang.String description_ = "";

    public boolean hasDescription() {
      return this.hasDescription;
    }

    public java.lang.String getDescription() {
      return this.description_;
    }

    // optional string RawRating = 8;
    private boolean hasRawRating;
    private java.lang.String rawRating_ = "";

    public boolean hasRawRating() {
      return this.hasRawRating;
    }

    public java.lang.String getRawRating() {
      return this.rawRating_;
    }

    // optional int32 Score = 9;
    private boolean hasScore;
    private int score_ = 0;

    public boolean hasScore() {
      return this.hasScore;
    }

    public int getScore() {
      return this.score_;
    }

    // optional string IMDbUrl = 10;
    private boolean hasIMDbUrl;
    private java.lang.String iMDbUrl_ = "";

    public boolean hasIMDbUrl() {
      return this.hasIMDbUrl;
    }

    public java.lang.String getIMDbUrl() {
      return this.iMDbUrl_;
    }

    // repeated string Director = 11;
    private java.util.List<java.lang.String> director_ = java.util.Collections.emptyList();

    public java.util.List<java.lang.String> getDirectorList() {
      return this.director_;
    }

    public int getDirectorCount() {
      return this.director_.size();
    }

    public java.lang.String getDirector(final int index) {
      return this.director_.get(index);
    }

    // repeated string Cast = 12;
    private java.util.List<java.lang.String> cast_ = java.util.Collections.emptyList();

    public java.util.List<java.lang.String> getCastList() {
      return this.cast_;
    }

    public int getCastCount() {
      return this.cast_.size();
    }

    public java.lang.String getCast(final int index) {
      return this.cast_.get(index);
    }

    // repeated string Dubbed = 13;
    private java.util.List<java.lang.String> dubbed_ = java.util.Collections.emptyList();

    public java.util.List<java.lang.String> getDubbedList() {
      return this.dubbed_;
    }

    public int getDubbedCount() {
      return this.dubbed_.size();
    }

    public java.lang.String getDubbed(final int index) {
      return this.dubbed_.get(index);
    }

    // repeated string Subtitled = 14;
    private java.util.List<java.lang.String> subtitled_ = java.util.Collections.emptyList();

    public java.util.List<java.lang.String> getSubtitledList() {
      return this.subtitled_;
    }

    public int getSubtitledCount() {
      return this.subtitled_.size();
    }

    public java.lang.String getSubtitled(final int index) {
      return this.subtitled_.get(index);
    }

    // optional string ReleaseDate = 15;
    private boolean hasReleaseDate;
    private java.lang.String releaseDate_ = "";

    public boolean hasReleaseDate() {
      return this.hasReleaseDate;
    }

    public java.lang.String getReleaseDate() {
      return this.releaseDate_;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public void writeTo(final com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (hasIdentifier()) {
        output.writeString(1, getIdentifier());
      }
      if (hasTitle()) {
        output.writeString(2, getTitle());
      }
      if (hasLength()) {
        output.writeInt32(3, getLength());
      }
      if (hasLanguage()) {
        output.writeString(4, getLanguage());
      }
      if (hasGenre()) {
        output.writeString(5, getGenre());
      }
      if (hasDescription()) {
        output.writeString(6, getDescription());
      }
      if (hasRawRating()) {
        output.writeString(8, getRawRating());
      }
      if (hasScore()) {
        output.writeInt32(9, getScore());
      }
      if (hasIMDbUrl()) {
        output.writeString(10, getIMDbUrl());
      }
      for (final java.lang.String element : getDirectorList()) {
        output.writeString(11, element);
      }
      for (final java.lang.String element : getCastList()) {
        output.writeString(12, element);
      }
      for (final java.lang.String element : getDubbedList()) {
        output.writeString(13, element);
      }
      for (final java.lang.String element : getSubtitledList()) {
        output.writeString(14, element);
      }
      if (hasReleaseDate()) {
        output.writeString(15, getReleaseDate());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;

    @Override
    public int getSerializedSize() {
      int size = this.memoizedSerializedSize;
      if (size != -1) {
        return size;
      }

      size = 0;
      if (hasIdentifier()) {
        size += com.google.protobuf.CodedOutputStream.computeStringSize(1, getIdentifier());
      }
      if (hasTitle()) {
        size += com.google.protobuf.CodedOutputStream.computeStringSize(2, getTitle());
      }
      if (hasLength()) {
        size += com.google.protobuf.CodedOutputStream.computeInt32Size(3, getLength());
      }
      if (hasLanguage()) {
        size += com.google.protobuf.CodedOutputStream.computeStringSize(4, getLanguage());
      }
      if (hasGenre()) {
        size += com.google.protobuf.CodedOutputStream.computeStringSize(5, getGenre());
      }
      if (hasDescription()) {
        size += com.google.protobuf.CodedOutputStream.computeStringSize(6, getDescription());
      }
      if (hasRawRating()) {
        size += com.google.protobuf.CodedOutputStream.computeStringSize(8, getRawRating());
      }
      if (hasScore()) {
        size += com.google.protobuf.CodedOutputStream.computeInt32Size(9, getScore());
      }
      if (hasIMDbUrl()) {
        size += com.google.protobuf.CodedOutputStream.computeStringSize(10, getIMDbUrl());
      }
      for (final java.lang.String element : getDirectorList()) {
        size += com.google.protobuf.CodedOutputStream.computeStringSize(11, element);
      }
      for (final java.lang.String element : getCastList()) {
        size += com.google.protobuf.CodedOutputStream.computeStringSize(12, element);
      }
      for (final java.lang.String element : getDubbedList()) {
        size += com.google.protobuf.CodedOutputStream.computeStringSize(13, element);
      }
      for (final java.lang.String element : getSubtitledList()) {
        size += com.google.protobuf.CodedOutputStream.computeStringSize(14, element);
      }
      if (hasReleaseDate()) {
        size += com.google.protobuf.CodedOutputStream.computeStringSize(15, getReleaseDate());
      }
      size += getUnknownFields().getSerializedSize();
      this.memoizedSerializedSize = size;
      return size;
    }

    public static NowPlaying.MovieProto parseFrom(final com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static NowPlaying.MovieProto parseFrom(final com.google.protobuf.ByteString data,
      final com.google.protobuf.ExtensionRegistry extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static NowPlaying.MovieProto parseFrom(final byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static NowPlaying.MovieProto parseFrom(final byte[] data, final com.google.protobuf.ExtensionRegistry extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static NowPlaying.MovieProto parseFrom(final java.io.InputStream input) throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static NowPlaying.MovieProto parseFrom(final java.io.InputStream input, final com.google.protobuf.ExtensionRegistry extensionRegistry)
      throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static NowPlaying.MovieProto parseFrom(final com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static NowPlaying.MovieProto parseFrom(final com.google.protobuf.CodedInputStream input,
      final com.google.protobuf.ExtensionRegistry extensionRegistry) throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static Builder newBuilder() {
      return new Builder();
    }

    public Builder newBuilderForType() {
      return new Builder();
    }

    public static Builder newBuilder(final NowPlaying.MovieProto prototype) {
      return new Builder().mergeFrom(prototype);
    }

    public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> {
      // Construct using NowPlaying.MovieProto.newBuilder()
      private Builder() {
      }

      NowPlaying.MovieProto result = new NowPlaying.MovieProto();

      @Override
      protected NowPlaying.MovieProto internalGetResult() {
        return this.result;
      }

      @Override
      public Builder clear() {
        this.result = new NowPlaying.MovieProto();
        return this;
      }

      @Override
      public Builder clone() {
        return new Builder().mergeFrom(this.result);
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return NowPlaying.MovieProto.getDescriptor();
      }

      public NowPlaying.MovieProto getDefaultInstanceForType() {
        return NowPlaying.MovieProto.getDefaultInstance();
      }

      public NowPlaying.MovieProto build() {
        if (!isInitialized()) {
          throw new com.google.protobuf.UninitializedMessageException(this.result);
        }
        return buildPartial();
      }

      private NowPlaying.MovieProto buildParsed() throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw new com.google.protobuf.UninitializedMessageException(this.result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }

      public NowPlaying.MovieProto buildPartial() {
        if (this.result.director_ != java.util.Collections.EMPTY_LIST) {
          this.result.director_ = java.util.Collections.unmodifiableList(this.result.director_);
        }
        if (this.result.cast_ != java.util.Collections.EMPTY_LIST) {
          this.result.cast_ = java.util.Collections.unmodifiableList(this.result.cast_);
        }
        if (this.result.dubbed_ != java.util.Collections.EMPTY_LIST) {
          this.result.dubbed_ = java.util.Collections.unmodifiableList(this.result.dubbed_);
        }
        if (this.result.subtitled_ != java.util.Collections.EMPTY_LIST) {
          this.result.subtitled_ = java.util.Collections.unmodifiableList(this.result.subtitled_);
        }
        final NowPlaying.MovieProto returnMe = this.result;
        this.result = null;
        return returnMe;
      }

      @Override
      public Builder mergeFrom(final com.google.protobuf.Message other) {
        if (other instanceof NowPlaying.MovieProto) {
          return mergeFrom((NowPlaying.MovieProto) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(final NowPlaying.MovieProto other) {
        if (other == NowPlaying.MovieProto.getDefaultInstance()) {
          return this;
        }
        if (other.hasIdentifier()) {
          setIdentifier(other.getIdentifier());
        }
        if (other.hasTitle()) {
          setTitle(other.getTitle());
        }
        if (other.hasLength()) {
          setLength(other.getLength());
        }
        if (other.hasLanguage()) {
          setLanguage(other.getLanguage());
        }
        if (other.hasGenre()) {
          setGenre(other.getGenre());
        }
        if (other.hasDescription()) {
          setDescription(other.getDescription());
        }
        if (other.hasRawRating()) {
          setRawRating(other.getRawRating());
        }
        if (other.hasScore()) {
          setScore(other.getScore());
        }
        if (other.hasIMDbUrl()) {
          setIMDbUrl(other.getIMDbUrl());
        }
        if (!other.director_.isEmpty()) {
          if (this.result.director_.isEmpty()) {
            this.result.director_ = new java.util.ArrayList<java.lang.String>();
          }
          this.result.director_.addAll(other.director_);
        }
        if (!other.cast_.isEmpty()) {
          if (this.result.cast_.isEmpty()) {
            this.result.cast_ = new java.util.ArrayList<java.lang.String>();
          }
          this.result.cast_.addAll(other.cast_);
        }
        if (!other.dubbed_.isEmpty()) {
          if (this.result.dubbed_.isEmpty()) {
            this.result.dubbed_ = new java.util.ArrayList<java.lang.String>();
          }
          this.result.dubbed_.addAll(other.dubbed_);
        }
        if (!other.subtitled_.isEmpty()) {
          if (this.result.subtitled_.isEmpty()) {
            this.result.subtitled_ = new java.util.ArrayList<java.lang.String>();
          }
          this.result.subtitled_.addAll(other.subtitled_);
        }
        if (other.hasReleaseDate()) {
          setReleaseDate(other.getReleaseDate());
        }
        mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      @Override
      public Builder mergeFrom(final com.google.protobuf.CodedInputStream input) throws java.io.IOException {
        return mergeFrom(input, com.google.protobuf.ExtensionRegistry.getEmptyRegistry());
      }

      @Override
      public Builder mergeFrom(final com.google.protobuf.CodedInputStream input, final com.google.protobuf.ExtensionRegistry extensionRegistry)
        throws java.io.IOException {
        final com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder(getUnknownFields());
        while (true) {
          final int tag = input.readTag();
          switch (tag) {
            case 0:
              setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setIdentifier(input.readString());
              break;
            }
            case 18: {
              setTitle(input.readString());
              break;
            }
            case 24: {
              setLength(input.readInt32());
              break;
            }
            case 34: {
              setLanguage(input.readString());
              break;
            }
            case 42: {
              setGenre(input.readString());
              break;
            }
            case 50: {
              setDescription(input.readString());
              break;
            }
            case 66: {
              setRawRating(input.readString());
              break;
            }
            case 72: {
              setScore(input.readInt32());
              break;
            }
            case 82: {
              setIMDbUrl(input.readString());
              break;
            }
            case 90: {
              addDirector(input.readString());
              break;
            }
            case 98: {
              addCast(input.readString());
              break;
            }
            case 106: {
              addDubbed(input.readString());
              break;
            }
            case 114: {
              addSubtitled(input.readString());
              break;
            }
            case 122: {
              setReleaseDate(input.readString());
              break;
            }
          }
        }
      }

      // optional string Identifier = 1;
      public boolean hasIdentifier() {
        return this.result.hasIdentifier();
      }

      public java.lang.String getIdentifier() {
        return this.result.getIdentifier();
      }

      public Builder setIdentifier(final java.lang.String value) {
        this.result.hasIdentifier = true;
        this.result.identifier_ = value;
        return this;
      }

      public Builder clearIdentifier() {
        this.result.hasIdentifier = false;
        this.result.identifier_ = "";
        return this;
      }

      // optional string Title = 2;
      public boolean hasTitle() {
        return this.result.hasTitle();
      }

      public java.lang.String getTitle() {
        return this.result.getTitle();
      }

      public Builder setTitle(final java.lang.String value) {
        this.result.hasTitle = true;
        this.result.title_ = value;
        return this;
      }

      public Builder clearTitle() {
        this.result.hasTitle = false;
        this.result.title_ = "";
        return this;
      }

      // optional int32 Length = 3;
      public boolean hasLength() {
        return this.result.hasLength();
      }

      public int getLength() {
        return this.result.getLength();
      }

      public Builder setLength(final int value) {
        this.result.hasLength = true;
        this.result.length_ = value;
        return this;
      }

      public Builder clearLength() {
        this.result.hasLength = false;
        this.result.length_ = 0;
        return this;
      }

      // optional string Language = 4;
      public boolean hasLanguage() {
        return this.result.hasLanguage();
      }

      public java.lang.String getLanguage() {
        return this.result.getLanguage();
      }

      public Builder setLanguage(final java.lang.String value) {
        this.result.hasLanguage = true;
        this.result.language_ = value;
        return this;
      }

      public Builder clearLanguage() {
        this.result.hasLanguage = false;
        this.result.language_ = "";
        return this;
      }

      // optional string Genre = 5;
      public boolean hasGenre() {
        return this.result.hasGenre();
      }

      public java.lang.String getGenre() {
        return this.result.getGenre();
      }

      public Builder setGenre(final java.lang.String value) {
        this.result.hasGenre = true;
        this.result.genre_ = value;
        return this;
      }

      public Builder clearGenre() {
        this.result.hasGenre = false;
        this.result.genre_ = "";
        return this;
      }

      // optional string Description = 6;
      public boolean hasDescription() {
        return this.result.hasDescription();
      }

      public java.lang.String getDescription() {
        return this.result.getDescription();
      }

      public Builder setDescription(final java.lang.String value) {
        this.result.hasDescription = true;
        this.result.description_ = value;
        return this;
      }

      public Builder clearDescription() {
        this.result.hasDescription = false;
        this.result.description_ = "";
        return this;
      }

      // optional string RawRating = 8;
      public boolean hasRawRating() {
        return this.result.hasRawRating();
      }

      public java.lang.String getRawRating() {
        return this.result.getRawRating();
      }

      public Builder setRawRating(final java.lang.String value) {
        this.result.hasRawRating = true;
        this.result.rawRating_ = value;
        return this;
      }

      public Builder clearRawRating() {
        this.result.hasRawRating = false;
        this.result.rawRating_ = "";
        return this;
      }

      // optional int32 Score = 9;
      public boolean hasScore() {
        return this.result.hasScore();
      }

      public int getScore() {
        return this.result.getScore();
      }

      public Builder setScore(final int value) {
        this.result.hasScore = true;
        this.result.score_ = value;
        return this;
      }

      public Builder clearScore() {
        this.result.hasScore = false;
        this.result.score_ = 0;
        return this;
      }

      // optional string IMDbUrl = 10;
      public boolean hasIMDbUrl() {
        return this.result.hasIMDbUrl();
      }

      public java.lang.String getIMDbUrl() {
        return this.result.getIMDbUrl();
      }

      public Builder setIMDbUrl(final java.lang.String value) {
        this.result.hasIMDbUrl = true;
        this.result.iMDbUrl_ = value;
        return this;
      }

      public Builder clearIMDbUrl() {
        this.result.hasIMDbUrl = false;
        this.result.iMDbUrl_ = "";
        return this;
      }

      // repeated string Director = 11;
      public java.util.List<java.lang.String> getDirectorList() {
        return java.util.Collections.unmodifiableList(this.result.director_);
      }

      public int getDirectorCount() {
        return this.result.getDirectorCount();
      }

      public java.lang.String getDirector(final int index) {
        return this.result.getDirector(index);
      }

      public Builder setDirector(final int index, final java.lang.String value) {
        this.result.director_.set(index, value);
        return this;
      }

      public Builder addDirector(final java.lang.String value) {
        if (this.result.director_.isEmpty()) {
          this.result.director_ = new java.util.ArrayList<java.lang.String>();
        }
        this.result.director_.add(value);
        return this;
      }

      public Builder addAllDirector(final java.lang.Iterable<? extends java.lang.String> values) {
        if (this.result.director_.isEmpty()) {
          this.result.director_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, this.result.director_);
        return this;
      }

      public Builder clearDirector() {
        this.result.director_ = java.util.Collections.emptyList();
        return this;
      }

      // repeated string Cast = 12;
      public java.util.List<java.lang.String> getCastList() {
        return java.util.Collections.unmodifiableList(this.result.cast_);
      }

      public int getCastCount() {
        return this.result.getCastCount();
      }

      public java.lang.String getCast(final int index) {
        return this.result.getCast(index);
      }

      public Builder setCast(final int index, final java.lang.String value) {
        this.result.cast_.set(index, value);
        return this;
      }

      public Builder addCast(final java.lang.String value) {
        if (this.result.cast_.isEmpty()) {
          this.result.cast_ = new java.util.ArrayList<java.lang.String>();
        }
        this.result.cast_.add(value);
        return this;
      }

      public Builder addAllCast(final java.lang.Iterable<? extends java.lang.String> values) {
        if (this.result.cast_.isEmpty()) {
          this.result.cast_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, this.result.cast_);
        return this;
      }

      public Builder clearCast() {
        this.result.cast_ = java.util.Collections.emptyList();
        return this;
      }

      // repeated string Dubbed = 13;
      public java.util.List<java.lang.String> getDubbedList() {
        return java.util.Collections.unmodifiableList(this.result.dubbed_);
      }

      public int getDubbedCount() {
        return this.result.getDubbedCount();
      }

      public java.lang.String getDubbed(final int index) {
        return this.result.getDubbed(index);
      }

      public Builder setDubbed(final int index, final java.lang.String value) {
        this.result.dubbed_.set(index, value);
        return this;
      }

      public Builder addDubbed(final java.lang.String value) {
        if (this.result.dubbed_.isEmpty()) {
          this.result.dubbed_ = new java.util.ArrayList<java.lang.String>();
        }
        this.result.dubbed_.add(value);
        return this;
      }

      public Builder addAllDubbed(final java.lang.Iterable<? extends java.lang.String> values) {
        if (this.result.dubbed_.isEmpty()) {
          this.result.dubbed_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, this.result.dubbed_);
        return this;
      }

      public Builder clearDubbed() {
        this.result.dubbed_ = java.util.Collections.emptyList();
        return this;
      }

      // repeated string Subtitled = 14;
      public java.util.List<java.lang.String> getSubtitledList() {
        return java.util.Collections.unmodifiableList(this.result.subtitled_);
      }

      public int getSubtitledCount() {
        return this.result.getSubtitledCount();
      }

      public java.lang.String getSubtitled(final int index) {
        return this.result.getSubtitled(index);
      }

      public Builder setSubtitled(final int index, final java.lang.String value) {
        this.result.subtitled_.set(index, value);
        return this;
      }

      public Builder addSubtitled(final java.lang.String value) {
        if (this.result.subtitled_.isEmpty()) {
          this.result.subtitled_ = new java.util.ArrayList<java.lang.String>();
        }
        this.result.subtitled_.add(value);
        return this;
      }

      public Builder addAllSubtitled(final java.lang.Iterable<? extends java.lang.String> values) {
        if (this.result.subtitled_.isEmpty()) {
          this.result.subtitled_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, this.result.subtitled_);
        return this;
      }

      public Builder clearSubtitled() {
        this.result.subtitled_ = java.util.Collections.emptyList();
        return this;
      }

      // optional string ReleaseDate = 15;
      public boolean hasReleaseDate() {
        return this.result.hasReleaseDate();
      }

      public java.lang.String getReleaseDate() {
        return this.result.getReleaseDate();
      }

      public Builder setReleaseDate(final java.lang.String value) {
        this.result.hasReleaseDate = true;
        this.result.releaseDate_ = value;
        return this;
      }

      public Builder clearReleaseDate() {
        this.result.hasReleaseDate = false;
        this.result.releaseDate_ = "";
        return this;
      }
    }
  }

  public static final class TheaterProto extends com.google.protobuf.GeneratedMessage {
    // Use TheaterProto.newBuilder() to construct.
    private TheaterProto() {
    }

    private static final TheaterProto defaultInstance = new TheaterProto();

    public static TheaterProto getDefaultInstance() {
      return defaultInstance;
    }

    public TheaterProto getDefaultInstanceForType() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return NowPlaying.internal_static_TheaterProto_descriptor;
    }

    @Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
      return NowPlaying.internal_static_TheaterProto_fieldAccessorTable;
    }

    // optional string Identifier = 1;
    private boolean hasIdentifier;
    private java.lang.String identifier_ = "";

    public boolean hasIdentifier() {
      return this.hasIdentifier;
    }

    public java.lang.String getIdentifier() {
      return this.identifier_;
    }

    // optional string Name = 2;
    private boolean hasName;
    private java.lang.String name_ = "";

    public boolean hasName() {
      return this.hasName;
    }

    public java.lang.String getName() {
      return this.name_;
    }

    // optional string StreetAddress = 3;
    private boolean hasStreetAddress;
    private java.lang.String streetAddress_ = "";

    public boolean hasStreetAddress() {
      return this.hasStreetAddress;
    }

    public java.lang.String getStreetAddress() {
      return this.streetAddress_;
    }

    // optional string City = 4;
    private boolean hasCity;
    private java.lang.String city_ = "";

    public boolean hasCity() {
      return this.hasCity;
    }

    public java.lang.String getCity() {
      return this.city_;
    }

    // optional string State = 5;
    private boolean hasState;
    private java.lang.String state_ = "";

    public boolean hasState() {
      return this.hasState;
    }

    public java.lang.String getState() {
      return this.state_;
    }

    // optional string PostalCode = 6;
    private boolean hasPostalCode;
    private java.lang.String postalCode_ = "";

    public boolean hasPostalCode() {
      return this.hasPostalCode;
    }

    public java.lang.String getPostalCode() {
      return this.postalCode_;
    }

    // optional string Country = 7;
    private boolean hasCountry;
    private java.lang.String country_ = "";

    public boolean hasCountry() {
      return this.hasCountry;
    }

    public java.lang.String getCountry() {
      return this.country_;
    }

    // optional string Phone = 8;
    private boolean hasPhone;
    private java.lang.String phone_ = "";

    public boolean hasPhone() {
      return this.hasPhone;
    }

    public java.lang.String getPhone() {
      return this.phone_;
    }

    // optional double Latitude = 9;
    private boolean hasLatitude;
    private double latitude_ = 0D;

    public boolean hasLatitude() {
      return this.hasLatitude;
    }

    public double getLatitude() {
      return this.latitude_;
    }

    // optional double Longitude = 10;
    private boolean hasLongitude;
    private double longitude_ = 0D;

    public boolean hasLongitude() {
      return this.hasLongitude;
    }

    public double getLongitude() {
      return this.longitude_;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public void writeTo(final com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (hasIdentifier()) {
        output.writeString(1, getIdentifier());
      }
      if (hasName()) {
        output.writeString(2, getName());
      }
      if (hasStreetAddress()) {
        output.writeString(3, getStreetAddress());
      }
      if (hasCity()) {
        output.writeString(4, getCity());
      }
      if (hasState()) {
        output.writeString(5, getState());
      }
      if (hasPostalCode()) {
        output.writeString(6, getPostalCode());
      }
      if (hasCountry()) {
        output.writeString(7, getCountry());
      }
      if (hasPhone()) {
        output.writeString(8, getPhone());
      }
      if (hasLatitude()) {
        output.writeDouble(9, getLatitude());
      }
      if (hasLongitude()) {
        output.writeDouble(10, getLongitude());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;

    @Override
    public int getSerializedSize() {
      int size = this.memoizedSerializedSize;
      if (size != -1) {
        return size;
      }

      size = 0;
      if (hasIdentifier()) {
        size += com.google.protobuf.CodedOutputStream.computeStringSize(1, getIdentifier());
      }
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream.computeStringSize(2, getName());
      }
      if (hasStreetAddress()) {
        size += com.google.protobuf.CodedOutputStream.computeStringSize(3, getStreetAddress());
      }
      if (hasCity()) {
        size += com.google.protobuf.CodedOutputStream.computeStringSize(4, getCity());
      }
      if (hasState()) {
        size += com.google.protobuf.CodedOutputStream.computeStringSize(5, getState());
      }
      if (hasPostalCode()) {
        size += com.google.protobuf.CodedOutputStream.computeStringSize(6, getPostalCode());
      }
      if (hasCountry()) {
        size += com.google.protobuf.CodedOutputStream.computeStringSize(7, getCountry());
      }
      if (hasPhone()) {
        size += com.google.protobuf.CodedOutputStream.computeStringSize(8, getPhone());
      }
      if (hasLatitude()) {
        size += com.google.protobuf.CodedOutputStream.computeDoubleSize(9, getLatitude());
      }
      if (hasLongitude()) {
        size += com.google.protobuf.CodedOutputStream.computeDoubleSize(10, getLongitude());
      }
      size += getUnknownFields().getSerializedSize();
      this.memoizedSerializedSize = size;
      return size;
    }

    public static NowPlaying.TheaterProto parseFrom(final com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static NowPlaying.TheaterProto parseFrom(final com.google.protobuf.ByteString data,
      final com.google.protobuf.ExtensionRegistry extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static NowPlaying.TheaterProto parseFrom(final byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static NowPlaying.TheaterProto parseFrom(final byte[] data, final com.google.protobuf.ExtensionRegistry extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static NowPlaying.TheaterProto parseFrom(final java.io.InputStream input) throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static NowPlaying.TheaterProto parseFrom(final java.io.InputStream input, final com.google.protobuf.ExtensionRegistry extensionRegistry)
      throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static NowPlaying.TheaterProto parseFrom(final com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static NowPlaying.TheaterProto parseFrom(final com.google.protobuf.CodedInputStream input,
      final com.google.protobuf.ExtensionRegistry extensionRegistry) throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static Builder newBuilder() {
      return new Builder();
    }

    public Builder newBuilderForType() {
      return new Builder();
    }

    public static Builder newBuilder(final NowPlaying.TheaterProto prototype) {
      return new Builder().mergeFrom(prototype);
    }

    public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> {
      // Construct using NowPlaying.TheaterProto.newBuilder()
      private Builder() {
      }

      NowPlaying.TheaterProto result = new NowPlaying.TheaterProto();

      @Override
      protected NowPlaying.TheaterProto internalGetResult() {
        return this.result;
      }

      @Override
      public Builder clear() {
        this.result = new NowPlaying.TheaterProto();
        return this;
      }

      @Override
      public Builder clone() {
        return new Builder().mergeFrom(this.result);
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return NowPlaying.TheaterProto.getDescriptor();
      }

      public NowPlaying.TheaterProto getDefaultInstanceForType() {
        return NowPlaying.TheaterProto.getDefaultInstance();
      }

      public NowPlaying.TheaterProto build() {
        if (!isInitialized()) {
          throw new com.google.protobuf.UninitializedMessageException(this.result);
        }
        return buildPartial();
      }

      private NowPlaying.TheaterProto buildParsed() throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw new com.google.protobuf.UninitializedMessageException(this.result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }

      public NowPlaying.TheaterProto buildPartial() {
        final NowPlaying.TheaterProto returnMe = this.result;
        this.result = null;
        return returnMe;
      }

      @Override
      public Builder mergeFrom(final com.google.protobuf.Message other) {
        if (other instanceof NowPlaying.TheaterProto) {
          return mergeFrom((NowPlaying.TheaterProto) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(final NowPlaying.TheaterProto other) {
        if (other == NowPlaying.TheaterProto.getDefaultInstance()) {
          return this;
        }
        if (other.hasIdentifier()) {
          setIdentifier(other.getIdentifier());
        }
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasStreetAddress()) {
          setStreetAddress(other.getStreetAddress());
        }
        if (other.hasCity()) {
          setCity(other.getCity());
        }
        if (other.hasState()) {
          setState(other.getState());
        }
        if (other.hasPostalCode()) {
          setPostalCode(other.getPostalCode());
        }
        if (other.hasCountry()) {
          setCountry(other.getCountry());
        }
        if (other.hasPhone()) {
          setPhone(other.getPhone());
        }
        if (other.hasLatitude()) {
          setLatitude(other.getLatitude());
        }
        if (other.hasLongitude()) {
          setLongitude(other.getLongitude());
        }
        mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      @Override
      public Builder mergeFrom(final com.google.protobuf.CodedInputStream input) throws java.io.IOException {
        return mergeFrom(input, com.google.protobuf.ExtensionRegistry.getEmptyRegistry());
      }

      @Override
      public Builder mergeFrom(final com.google.protobuf.CodedInputStream input, final com.google.protobuf.ExtensionRegistry extensionRegistry)
        throws java.io.IOException {
        final com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder(getUnknownFields());
        while (true) {
          final int tag = input.readTag();
          switch (tag) {
            case 0:
              setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setIdentifier(input.readString());
              break;
            }
            case 18: {
              setName(input.readString());
              break;
            }
            case 26: {
              setStreetAddress(input.readString());
              break;
            }
            case 34: {
              setCity(input.readString());
              break;
            }
            case 42: {
              setState(input.readString());
              break;
            }
            case 50: {
              setPostalCode(input.readString());
              break;
            }
            case 58: {
              setCountry(input.readString());
              break;
            }
            case 66: {
              setPhone(input.readString());
              break;
            }
            case 73: {
              setLatitude(input.readDouble());
              break;
            }
            case 81: {
              setLongitude(input.readDouble());
              break;
            }
          }
        }
      }

      // optional string Identifier = 1;
      public boolean hasIdentifier() {
        return this.result.hasIdentifier();
      }

      public java.lang.String getIdentifier() {
        return this.result.getIdentifier();
      }

      public Builder setIdentifier(final java.lang.String value) {
        this.result.hasIdentifier = true;
        this.result.identifier_ = value;
        return this;
      }

      public Builder clearIdentifier() {
        this.result.hasIdentifier = false;
        this.result.identifier_ = "";
        return this;
      }

      // optional string Name = 2;
      public boolean hasName() {
        return this.result.hasName();
      }

      public java.lang.String getName() {
        return this.result.getName();
      }

      public Builder setName(final java.lang.String value) {
        this.result.hasName = true;
        this.result.name_ = value;
        return this;
      }

      public Builder clearName() {
        this.result.hasName = false;
        this.result.name_ = "";
        return this;
      }

      // optional string StreetAddress = 3;
      public boolean hasStreetAddress() {
        return this.result.hasStreetAddress();
      }

      public java.lang.String getStreetAddress() {
        return this.result.getStreetAddress();
      }

      public Builder setStreetAddress(final java.lang.String value) {
        this.result.hasStreetAddress = true;
        this.result.streetAddress_ = value;
        return this;
      }

      public Builder clearStreetAddress() {
        this.result.hasStreetAddress = false;
        this.result.streetAddress_ = "";
        return this;
      }

      // optional string City = 4;
      public boolean hasCity() {
        return this.result.hasCity();
      }

      public java.lang.String getCity() {
        return this.result.getCity();
      }

      public Builder setCity(final java.lang.String value) {
        this.result.hasCity = true;
        this.result.city_ = value;
        return this;
      }

      public Builder clearCity() {
        this.result.hasCity = false;
        this.result.city_ = "";
        return this;
      }

      // optional string State = 5;
      public boolean hasState() {
        return this.result.hasState();
      }

      public java.lang.String getState() {
        return this.result.getState();
      }

      public Builder setState(final java.lang.String value) {
        this.result.hasState = true;
        this.result.state_ = value;
        return this;
      }

      public Builder clearState() {
        this.result.hasState = false;
        this.result.state_ = "";
        return this;
      }

      // optional string PostalCode = 6;
      public boolean hasPostalCode() {
        return this.result.hasPostalCode();
      }

      public java.lang.String getPostalCode() {
        return this.result.getPostalCode();
      }

      public Builder setPostalCode(final java.lang.String value) {
        this.result.hasPostalCode = true;
        this.result.postalCode_ = value;
        return this;
      }

      public Builder clearPostalCode() {
        this.result.hasPostalCode = false;
        this.result.postalCode_ = "";
        return this;
      }

      // optional string Country = 7;
      public boolean hasCountry() {
        return this.result.hasCountry();
      }

      public java.lang.String getCountry() {
        return this.result.getCountry();
      }

      public Builder setCountry(final java.lang.String value) {
        this.result.hasCountry = true;
        this.result.country_ = value;
        return this;
      }

      public Builder clearCountry() {
        this.result.hasCountry = false;
        this.result.country_ = "";
        return this;
      }

      // optional string Phone = 8;
      public boolean hasPhone() {
        return this.result.hasPhone();
      }

      public java.lang.String getPhone() {
        return this.result.getPhone();
      }

      public Builder setPhone(final java.lang.String value) {
        this.result.hasPhone = true;
        this.result.phone_ = value;
        return this;
      }

      public Builder clearPhone() {
        this.result.hasPhone = false;
        this.result.phone_ = "";
        return this;
      }

      // optional double Latitude = 9;
      public boolean hasLatitude() {
        return this.result.hasLatitude();
      }

      public double getLatitude() {
        return this.result.getLatitude();
      }

      public Builder setLatitude(final double value) {
        this.result.hasLatitude = true;
        this.result.latitude_ = value;
        return this;
      }

      public Builder clearLatitude() {
        this.result.hasLatitude = false;
        this.result.latitude_ = 0D;
        return this;
      }

      // optional double Longitude = 10;
      public boolean hasLongitude() {
        return this.result.hasLongitude();
      }

      public double getLongitude() {
        return this.result.getLongitude();
      }

      public Builder setLongitude(final double value) {
        this.result.hasLongitude = true;
        this.result.longitude_ = value;
        return this;
      }

      public Builder clearLongitude() {
        this.result.hasLongitude = false;
        this.result.longitude_ = 0D;
        return this;
      }
    }
  }

  public static final class TheaterListingsProto extends com.google.protobuf.GeneratedMessage {
    // Use TheaterListingsProto.newBuilder() to construct.
    private TheaterListingsProto() {
    }

    private static final TheaterListingsProto defaultInstance = new TheaterListingsProto();

    public static TheaterListingsProto getDefaultInstance() {
      return defaultInstance;
    }

    public TheaterListingsProto getDefaultInstanceForType() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return NowPlaying.internal_static_TheaterListingsProto_descriptor;
    }

    @Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
      return NowPlaying.internal_static_TheaterListingsProto_fieldAccessorTable;
    }

    public static final class TheaterAndMovieShowtimesProto extends com.google.protobuf.GeneratedMessage {
      // Use TheaterAndMovieShowtimesProto.newBuilder() to construct.
      private TheaterAndMovieShowtimesProto() {
      }

      private static final TheaterAndMovieShowtimesProto defaultInstance = new TheaterAndMovieShowtimesProto();

      public static TheaterAndMovieShowtimesProto getDefaultInstance() {
        return defaultInstance;
      }

      public TheaterAndMovieShowtimesProto getDefaultInstanceForType() {
        return defaultInstance;
      }

      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return NowPlaying.internal_static_TheaterListingsProto_TheaterAndMovieShowtimesProto_descriptor;
      }

      @Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
        return NowPlaying.internal_static_TheaterListingsProto_TheaterAndMovieShowtimesProto_fieldAccessorTable;
      }

      public static final class MovieAndShowtimesProto extends com.google.protobuf.GeneratedMessage {
        // Use MovieAndShowtimesProto.newBuilder() to construct.
        private MovieAndShowtimesProto() {
        }

        private static final MovieAndShowtimesProto defaultInstance = new MovieAndShowtimesProto();

        public static MovieAndShowtimesProto getDefaultInstance() {
          return defaultInstance;
        }

        public MovieAndShowtimesProto getDefaultInstanceForType() {
          return defaultInstance;
        }

        public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
          return NowPlaying.internal_static_TheaterListingsProto_TheaterAndMovieShowtimesProto_MovieAndShowtimesProto_descriptor;
        }

        @Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
          return NowPlaying.internal_static_TheaterListingsProto_TheaterAndMovieShowtimesProto_MovieAndShowtimesProto_fieldAccessorTable;
        }

        // required string MovieIdentifier = 1;
        private boolean hasMovieIdentifier;
        private java.lang.String movieIdentifier_ = "";

        public boolean hasMovieIdentifier() {
          return this.hasMovieIdentifier;
        }

        public java.lang.String getMovieIdentifier() {
          return this.movieIdentifier_;
        }

        // required .AllShowtimesProto Showtimes = 2;
        private boolean hasShowtimes;
        private NowPlaying.AllShowtimesProto showtimes_ = NowPlaying.AllShowtimesProto.getDefaultInstance();

        public boolean hasShowtimes() {
          return this.hasShowtimes;
        }

        public NowPlaying.AllShowtimesProto getShowtimes() {
          return this.showtimes_;
        }

        @Override
        public final boolean isInitialized() {
          if (!this.hasMovieIdentifier) {
            return false;
          }
          if (!this.hasShowtimes) {
            return false;
          }
          if (!getShowtimes().isInitialized()) {
            return false;
          }
          return true;
        }

        @Override
        public void writeTo(final com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
          if (hasMovieIdentifier()) {
            output.writeString(1, getMovieIdentifier());
          }
          if (hasShowtimes()) {
            output.writeMessage(2, getShowtimes());
          }
          getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;

        @Override
        public int getSerializedSize() {
          int size = this.memoizedSerializedSize;
          if (size != -1) {
            return size;
          }

          size = 0;
          if (hasMovieIdentifier()) {
            size += com.google.protobuf.CodedOutputStream.computeStringSize(1, getMovieIdentifier());
          }
          if (hasShowtimes()) {
            size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, getShowtimes());
          }
          size += getUnknownFields().getSerializedSize();
          this.memoizedSerializedSize = size;
          return size;
        }

        public static NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto.MovieAndShowtimesProto parseFrom(
          final com.google.protobuf.ByteString data) throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data).buildParsed();
        }

        public static NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto.MovieAndShowtimesProto parseFrom(
          final com.google.protobuf.ByteString data, final com.google.protobuf.ExtensionRegistry extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
        }

        public static NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto.MovieAndShowtimesProto parseFrom(final byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data).buildParsed();
        }

        public static NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto.MovieAndShowtimesProto parseFrom(final byte[] data,
          final com.google.protobuf.ExtensionRegistry extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
          return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
        }

        public static NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto.MovieAndShowtimesProto parseFrom(final java.io.InputStream input)
          throws java.io.IOException {
          return newBuilder().mergeFrom(input).buildParsed();
        }

        public static NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto.MovieAndShowtimesProto parseFrom(final java.io.InputStream input,
          final com.google.protobuf.ExtensionRegistry extensionRegistry) throws java.io.IOException {
          return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
        }

        public static NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto.MovieAndShowtimesProto parseFrom(
          final com.google.protobuf.CodedInputStream input) throws java.io.IOException {
          return newBuilder().mergeFrom(input).buildParsed();
        }

        public static NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto.MovieAndShowtimesProto parseFrom(
          final com.google.protobuf.CodedInputStream input, final com.google.protobuf.ExtensionRegistry extensionRegistry)
          throws java.io.IOException {
          return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
        }

        public static Builder newBuilder() {
          return new Builder();
        }

        public Builder newBuilderForType() {
          return new Builder();
        }

        public static Builder newBuilder(final NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto.MovieAndShowtimesProto prototype) {
          return new Builder().mergeFrom(prototype);
        }

        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> {
          // Construct using
          // NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto.MovieAndShowtimesProto.newBuilder()
          private Builder() {
          }

          NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto.MovieAndShowtimesProto result = new NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto.MovieAndShowtimesProto();

          @Override
          protected NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto.MovieAndShowtimesProto internalGetResult() {
            return this.result;
          }

          @Override
          public Builder clear() {
            this.result = new NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto.MovieAndShowtimesProto();
            return this;
          }

          @Override
          public Builder clone() {
            return new Builder().mergeFrom(this.result);
          }

          @Override
          public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
            return NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto.MovieAndShowtimesProto.getDescriptor();
          }

          public NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto.MovieAndShowtimesProto getDefaultInstanceForType() {
            return NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto.MovieAndShowtimesProto.getDefaultInstance();
          }

          public NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto.MovieAndShowtimesProto build() {
            if (!isInitialized()) {
              throw new com.google.protobuf.UninitializedMessageException(this.result);
            }
            return buildPartial();
          }

          private NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto.MovieAndShowtimesProto buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
            if (!isInitialized()) {
              throw new com.google.protobuf.UninitializedMessageException(this.result).asInvalidProtocolBufferException();
            }
            return buildPartial();
          }

          public NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto.MovieAndShowtimesProto buildPartial() {
            final NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto.MovieAndShowtimesProto returnMe = this.result;
            this.result = null;
            return returnMe;
          }

          @Override
          public Builder mergeFrom(final com.google.protobuf.Message other) {
            if (other instanceof NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto.MovieAndShowtimesProto) {
              return mergeFrom((NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto.MovieAndShowtimesProto) other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(final NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto.MovieAndShowtimesProto other) {
            if (other == NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto.MovieAndShowtimesProto.getDefaultInstance()) {
              return this;
            }
            if (other.hasMovieIdentifier()) {
              setMovieIdentifier(other.getMovieIdentifier());
            }
            if (other.hasShowtimes()) {
              mergeShowtimes(other.getShowtimes());
            }
            mergeUnknownFields(other.getUnknownFields());
            return this;
          }

          @Override
          public Builder mergeFrom(final com.google.protobuf.CodedInputStream input) throws java.io.IOException {
            return mergeFrom(input, com.google.protobuf.ExtensionRegistry.getEmptyRegistry());
          }

          @Override
          public Builder mergeFrom(final com.google.protobuf.CodedInputStream input, final com.google.protobuf.ExtensionRegistry extensionRegistry)
            throws java.io.IOException {
            final com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder(getUnknownFields());
            while (true) {
              final int tag = input.readTag();
              switch (tag) {
                case 0:
                  setUnknownFields(unknownFields.build());
                  return this;
                default: {
                  if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                    setUnknownFields(unknownFields.build());
                    return this;
                  }
                  break;
                }
                case 10: {
                  setMovieIdentifier(input.readString());
                  break;
                }
                case 18: {
                  final NowPlaying.AllShowtimesProto.Builder subBuilder = NowPlaying.AllShowtimesProto.newBuilder();
                  if (hasShowtimes()) {
                    subBuilder.mergeFrom(getShowtimes());
                  }
                  input.readMessage(subBuilder, extensionRegistry);
                  setShowtimes(subBuilder.buildPartial());
                  break;
                }
              }
            }
          }

          // required string MovieIdentifier = 1;
          public boolean hasMovieIdentifier() {
            return this.result.hasMovieIdentifier();
          }

          public java.lang.String getMovieIdentifier() {
            return this.result.getMovieIdentifier();
          }

          public Builder setMovieIdentifier(final java.lang.String value) {
            this.result.hasMovieIdentifier = true;
            this.result.movieIdentifier_ = value;
            return this;
          }

          public Builder clearMovieIdentifier() {
            this.result.hasMovieIdentifier = false;
            this.result.movieIdentifier_ = "";
            return this;
          }

          // required .AllShowtimesProto Showtimes = 2;
          public boolean hasShowtimes() {
            return this.result.hasShowtimes();
          }

          public NowPlaying.AllShowtimesProto getShowtimes() {
            return this.result.getShowtimes();
          }

          public Builder setShowtimes(final NowPlaying.AllShowtimesProto value) {
            this.result.hasShowtimes = true;
            this.result.showtimes_ = value;
            return this;
          }

          public Builder setShowtimes(final NowPlaying.AllShowtimesProto.Builder builderForValue) {
            this.result.hasShowtimes = true;
            this.result.showtimes_ = builderForValue.build();
            return this;
          }

          public Builder mergeShowtimes(final NowPlaying.AllShowtimesProto value) {
            if (this.result.hasShowtimes() && this.result.showtimes_ != NowPlaying.AllShowtimesProto.getDefaultInstance()) {
              this.result.showtimes_ = NowPlaying.AllShowtimesProto.newBuilder(this.result.showtimes_).mergeFrom(value).buildPartial();
            } else {
              this.result.showtimes_ = value;
            }
            this.result.hasShowtimes = true;
            return this;
          }

          public Builder clearShowtimes() {
            this.result.hasShowtimes = false;
            this.result.showtimes_ = NowPlaying.AllShowtimesProto.getDefaultInstance();
            return this;
          }
        }
      }

      // required .TheaterProto Theater = 3;
      private boolean hasTheater;
      private NowPlaying.TheaterProto theater_ = NowPlaying.TheaterProto.getDefaultInstance();

      public boolean hasTheater() {
        return this.hasTheater;
      }

      public NowPlaying.TheaterProto getTheater() {
        return this.theater_;
      }

      // repeated
      // .TheaterListingsProto.TheaterAndMovieShowtimesProto.MovieAndShowtimesProto
      // MovieAndShowtimes = 4;
      private java.util.List<NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto.MovieAndShowtimesProto> movieAndShowtimes_ = java.util
        .Collections.emptyList();

      public java.util.List<NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto.MovieAndShowtimesProto> getMovieAndShowtimesList() {
        return this.movieAndShowtimes_;
      }

      public int getMovieAndShowtimesCount() {
        return this.movieAndShowtimes_.size();
      }

      public NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto.MovieAndShowtimesProto getMovieAndShowtimes(final int index) {
        return this.movieAndShowtimes_.get(index);
      }

      @Override
      public final boolean isInitialized() {
        if (!this.hasTheater) {
          return false;
        }
        for (final NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto.MovieAndShowtimesProto element : getMovieAndShowtimesList()) {
          if (!element.isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @Override
      public void writeTo(final com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
        if (hasTheater()) {
          output.writeMessage(3, getTheater());
        }
        for (final NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto.MovieAndShowtimesProto element : getMovieAndShowtimesList()) {
          output.writeMessage(4, element);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;

      @Override
      public int getSerializedSize() {
        int size = this.memoizedSerializedSize;
        if (size != -1) {
          return size;
        }

        size = 0;
        if (hasTheater()) {
          size += com.google.protobuf.CodedOutputStream.computeMessageSize(3, getTheater());
        }
        for (final NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto.MovieAndShowtimesProto element : getMovieAndShowtimesList()) {
          size += com.google.protobuf.CodedOutputStream.computeMessageSize(4, element);
        }
        size += getUnknownFields().getSerializedSize();
        this.memoizedSerializedSize = size;
        return size;
      }

      public static NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto parseFrom(final com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }

      public static NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto parseFrom(final com.google.protobuf.ByteString data,
        final com.google.protobuf.ExtensionRegistry extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
      }

      public static NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto parseFrom(final byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }

      public static NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto parseFrom(final byte[] data,
        final com.google.protobuf.ExtensionRegistry extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
      }

      public static NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto parseFrom(final java.io.InputStream input)
        throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }

      public static NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto parseFrom(final java.io.InputStream input,
        final com.google.protobuf.ExtensionRegistry extensionRegistry) throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
      }

      public static NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto parseFrom(final com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }

      public static NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto parseFrom(final com.google.protobuf.CodedInputStream input,
        final com.google.protobuf.ExtensionRegistry extensionRegistry) throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
      }

      public static Builder newBuilder() {
        return new Builder();
      }

      public Builder newBuilderForType() {
        return new Builder();
      }

      public static Builder newBuilder(final NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto prototype) {
        return new Builder().mergeFrom(prototype);
      }

      public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> {
        // Construct using
        // NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto.newBuilder()
        private Builder() {
        }

        NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto result = new NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto();

        @Override
        protected NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto internalGetResult() {
          return this.result;
        }

        @Override
        public Builder clear() {
          this.result = new NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto();
          return this;
        }

        @Override
        public Builder clone() {
          return new Builder().mergeFrom(this.result);
        }

        @Override
        public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
          return NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto.getDescriptor();
        }

        public NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto getDefaultInstanceForType() {
          return NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto.getDefaultInstance();
        }

        public NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto build() {
          if (!isInitialized()) {
            throw new com.google.protobuf.UninitializedMessageException(this.result);
          }
          return buildPartial();
        }

        private NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw new com.google.protobuf.UninitializedMessageException(this.result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }

        public NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto buildPartial() {
          if (this.result.movieAndShowtimes_ != java.util.Collections.EMPTY_LIST) {
            this.result.movieAndShowtimes_ = java.util.Collections.unmodifiableList(this.result.movieAndShowtimes_);
          }
          final NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto returnMe = this.result;
          this.result = null;
          return returnMe;
        }

        @Override
        public Builder mergeFrom(final com.google.protobuf.Message other) {
          if (other instanceof NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto) {
            return mergeFrom((NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto) other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(final NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto other) {
          if (other == NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto.getDefaultInstance()) {
            return this;
          }
          if (other.hasTheater()) {
            mergeTheater(other.getTheater());
          }
          if (!other.movieAndShowtimes_.isEmpty()) {
            if (this.result.movieAndShowtimes_.isEmpty()) {
              this.result.movieAndShowtimes_ = new java.util.ArrayList<NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto.MovieAndShowtimesProto>();
            }
            this.result.movieAndShowtimes_.addAll(other.movieAndShowtimes_);
          }
          mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        @Override
        public Builder mergeFrom(final com.google.protobuf.CodedInputStream input) throws java.io.IOException {
          return mergeFrom(input, com.google.protobuf.ExtensionRegistry.getEmptyRegistry());
        }

        @Override
        public Builder mergeFrom(final com.google.protobuf.CodedInputStream input, final com.google.protobuf.ExtensionRegistry extensionRegistry)
          throws java.io.IOException {
          final com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder(getUnknownFields());
          while (true) {
            final int tag = input.readTag();
            switch (tag) {
              case 0:
                setUnknownFields(unknownFields.build());
                return this;
              default: {
                if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                  setUnknownFields(unknownFields.build());
                  return this;
                }
                break;
              }
              case 26: {
                final NowPlaying.TheaterProto.Builder subBuilder = NowPlaying.TheaterProto.newBuilder();
                if (hasTheater()) {
                  subBuilder.mergeFrom(getTheater());
                }
                input.readMessage(subBuilder, extensionRegistry);
                setTheater(subBuilder.buildPartial());
                break;
              }
              case 34: {
                final NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto.MovieAndShowtimesProto.Builder subBuilder = NowPlaying
                  .TheaterListingsProto.TheaterAndMovieShowtimesProto.MovieAndShowtimesProto.newBuilder();
                input.readMessage(subBuilder, extensionRegistry);
                addMovieAndShowtimes(subBuilder.buildPartial());
                break;
              }
            }
          }
        }

        // required .TheaterProto Theater = 3;
        public boolean hasTheater() {
          return this.result.hasTheater();
        }

        public NowPlaying.TheaterProto getTheater() {
          return this.result.getTheater();
        }

        public Builder setTheater(final NowPlaying.TheaterProto value) {
          this.result.hasTheater = true;
          this.result.theater_ = value;
          return this;
        }

        public Builder setTheater(final NowPlaying.TheaterProto.Builder builderForValue) {
          this.result.hasTheater = true;
          this.result.theater_ = builderForValue.build();
          return this;
        }

        public Builder mergeTheater(final NowPlaying.TheaterProto value) {
          if (this.result.hasTheater() && this.result.theater_ != NowPlaying.TheaterProto.getDefaultInstance()) {
            this.result.theater_ = NowPlaying.TheaterProto.newBuilder(this.result.theater_).mergeFrom(value).buildPartial();
          } else {
            this.result.theater_ = value;
          }
          this.result.hasTheater = true;
          return this;
        }

        public Builder clearTheater() {
          this.result.hasTheater = false;
          this.result.theater_ = NowPlaying.TheaterProto.getDefaultInstance();
          return this;
        }

        // repeated
        // .TheaterListingsProto.TheaterAndMovieShowtimesProto.MovieAndShowtimesProto
        // MovieAndShowtimes = 4;
        public java.util.List<NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto.MovieAndShowtimesProto> getMovieAndShowtimesList() {
          return java.util.Collections.unmodifiableList(this.result.movieAndShowtimes_);
        }

        public int getMovieAndShowtimesCount() {
          return this.result.getMovieAndShowtimesCount();
        }

        public NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto.MovieAndShowtimesProto getMovieAndShowtimes(final int index) {
          return this.result.getMovieAndShowtimes(index);
        }

        public Builder setMovieAndShowtimes(final int index,
          final NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto.MovieAndShowtimesProto value) {
          this.result.movieAndShowtimes_.set(index, value);
          return this;
        }

        public Builder setMovieAndShowtimes(final int index,
          final NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto.MovieAndShowtimesProto.Builder builderForValue) {
          this.result.movieAndShowtimes_.set(index, builderForValue.build());
          return this;
        }

        public Builder addMovieAndShowtimes(final NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto.MovieAndShowtimesProto value) {
          if (this.result.movieAndShowtimes_.isEmpty()) {
            this.result.movieAndShowtimes_ = new java.util.ArrayList<NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto.MovieAndShowtimesProto>();
          }
          this.result.movieAndShowtimes_.add(value);
          return this;
        }

        public Builder addMovieAndShowtimes(
          final NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto.MovieAndShowtimesProto.Builder builderForValue) {
          if (this.result.movieAndShowtimes_.isEmpty()) {
            this.result.movieAndShowtimes_ = new java.util.ArrayList<NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto.MovieAndShowtimesProto>();
          }
          this.result.movieAndShowtimes_.add(builderForValue.build());
          return this;
        }

        public Builder addAllMovieAndShowtimes(
          final java.lang.Iterable<? extends NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto.MovieAndShowtimesProto> values) {
          if (this.result.movieAndShowtimes_.isEmpty()) {
            this.result.movieAndShowtimes_ = new java.util.ArrayList<NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto.MovieAndShowtimesProto>();
          }
          super.addAll(values, this.result.movieAndShowtimes_);
          return this;
        }

        public Builder clearMovieAndShowtimes() {
          this.result.movieAndShowtimes_ = java.util.Collections.emptyList();
          return this;
        }
      }
    }

    // repeated .MovieProto Movies = 5;
    private java.util.List<NowPlaying.MovieProto> movies_ = java.util.Collections.emptyList();

    public java.util.List<NowPlaying.MovieProto> getMoviesList() {
      return this.movies_;
    }

    public int getMoviesCount() {
      return this.movies_.size();
    }

    public NowPlaying.MovieProto getMovies(final int index) {
      return this.movies_.get(index);
    }

    // repeated .TheaterListingsProto.TheaterAndMovieShowtimesProto
    // TheaterAndMovieShowtimes = 6;
    private java.util.List<NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto> theaterAndMovieShowtimes_ = java.util.Collections
      .emptyList();

    public java.util.List<NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto> getTheaterAndMovieShowtimesList() {
      return this.theaterAndMovieShowtimes_;
    }

    public int getTheaterAndMovieShowtimesCount() {
      return this.theaterAndMovieShowtimes_.size();
    }

    public NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto getTheaterAndMovieShowtimes(final int index) {
      return this.theaterAndMovieShowtimes_.get(index);
    }

    @Override
    public final boolean isInitialized() {
      for (final NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto element : getTheaterAndMovieShowtimesList()) {
        if (!element.isInitialized()) {
          return false;
        }
      }
      return true;
    }

    @Override
    public void writeTo(final com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      for (final NowPlaying.MovieProto element : getMoviesList()) {
        output.writeMessage(5, element);
      }
      for (final NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto element : getTheaterAndMovieShowtimesList()) {
        output.writeMessage(6, element);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;

    @Override
    public int getSerializedSize() {
      int size = this.memoizedSerializedSize;
      if (size != -1) {
        return size;
      }

      size = 0;
      for (final NowPlaying.MovieProto element : getMoviesList()) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(5, element);
      }
      for (final NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto element : getTheaterAndMovieShowtimesList()) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(6, element);
      }
      size += getUnknownFields().getSerializedSize();
      this.memoizedSerializedSize = size;
      return size;
    }

    public static NowPlaying.TheaterListingsProto parseFrom(final com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static NowPlaying.TheaterListingsProto parseFrom(final com.google.protobuf.ByteString data,
      final com.google.protobuf.ExtensionRegistry extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static NowPlaying.TheaterListingsProto parseFrom(final byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static NowPlaying.TheaterListingsProto parseFrom(final byte[] data, final com.google.protobuf.ExtensionRegistry extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static NowPlaying.TheaterListingsProto parseFrom(final java.io.InputStream input) throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static NowPlaying.TheaterListingsProto parseFrom(final java.io.InputStream input,
      final com.google.protobuf.ExtensionRegistry extensionRegistry) throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static NowPlaying.TheaterListingsProto parseFrom(final com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static NowPlaying.TheaterListingsProto parseFrom(final com.google.protobuf.CodedInputStream input,
      final com.google.protobuf.ExtensionRegistry extensionRegistry) throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static Builder newBuilder() {
      return new Builder();
    }

    public Builder newBuilderForType() {
      return new Builder();
    }

    public static Builder newBuilder(final NowPlaying.TheaterListingsProto prototype) {
      return new Builder().mergeFrom(prototype);
    }

    public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> {
      // Construct using NowPlaying.TheaterListingsProto.newBuilder()
      private Builder() {
      }

      NowPlaying.TheaterListingsProto result = new NowPlaying.TheaterListingsProto();

      @Override
      protected NowPlaying.TheaterListingsProto internalGetResult() {
        return this.result;
      }

      @Override
      public Builder clear() {
        this.result = new NowPlaying.TheaterListingsProto();
        return this;
      }

      @Override
      public Builder clone() {
        return new Builder().mergeFrom(this.result);
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return NowPlaying.TheaterListingsProto.getDescriptor();
      }

      public NowPlaying.TheaterListingsProto getDefaultInstanceForType() {
        return NowPlaying.TheaterListingsProto.getDefaultInstance();
      }

      public NowPlaying.TheaterListingsProto build() {
        if (!isInitialized()) {
          throw new com.google.protobuf.UninitializedMessageException(this.result);
        }
        return buildPartial();
      }

      private NowPlaying.TheaterListingsProto buildParsed() throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw new com.google.protobuf.UninitializedMessageException(this.result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }

      public NowPlaying.TheaterListingsProto buildPartial() {
        if (this.result.movies_ != java.util.Collections.EMPTY_LIST) {
          this.result.movies_ = java.util.Collections.unmodifiableList(this.result.movies_);
        }
        if (this.result.theaterAndMovieShowtimes_ != java.util.Collections.EMPTY_LIST) {
          this.result.theaterAndMovieShowtimes_ = java.util.Collections.unmodifiableList(this.result.theaterAndMovieShowtimes_);
        }
        final NowPlaying.TheaterListingsProto returnMe = this.result;
        this.result = null;
        return returnMe;
      }

      @Override
      public Builder mergeFrom(final com.google.protobuf.Message other) {
        if (other instanceof NowPlaying.TheaterListingsProto) {
          return mergeFrom((NowPlaying.TheaterListingsProto) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(final NowPlaying.TheaterListingsProto other) {
        if (other == NowPlaying.TheaterListingsProto.getDefaultInstance()) {
          return this;
        }
        if (!other.movies_.isEmpty()) {
          if (this.result.movies_.isEmpty()) {
            this.result.movies_ = new java.util.ArrayList<NowPlaying.MovieProto>();
          }
          this.result.movies_.addAll(other.movies_);
        }
        if (!other.theaterAndMovieShowtimes_.isEmpty()) {
          if (this.result.theaterAndMovieShowtimes_.isEmpty()) {
            this.result.theaterAndMovieShowtimes_ = new java.util.ArrayList<NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto>();
          }
          this.result.theaterAndMovieShowtimes_.addAll(other.theaterAndMovieShowtimes_);
        }
        mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      @Override
      public Builder mergeFrom(final com.google.protobuf.CodedInputStream input) throws java.io.IOException {
        return mergeFrom(input, com.google.protobuf.ExtensionRegistry.getEmptyRegistry());
      }

      @Override
      public Builder mergeFrom(final com.google.protobuf.CodedInputStream input, final com.google.protobuf.ExtensionRegistry extensionRegistry)
        throws java.io.IOException {
        final com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder(getUnknownFields());
        while (true) {
          final int tag = input.readTag();
          switch (tag) {
            case 0:
              setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 42: {
              final NowPlaying.MovieProto.Builder subBuilder = NowPlaying.MovieProto.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addMovies(subBuilder.buildPartial());
              break;
            }
            case 50: {
              final NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto.Builder subBuilder = NowPlaying.TheaterListingsProto
                .TheaterAndMovieShowtimesProto.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addTheaterAndMovieShowtimes(subBuilder.buildPartial());
              break;
            }
          }
        }
      }

      // repeated .MovieProto Movies = 5;
      public java.util.List<NowPlaying.MovieProto> getMoviesList() {
        return java.util.Collections.unmodifiableList(this.result.movies_);
      }

      public int getMoviesCount() {
        return this.result.getMoviesCount();
      }

      public NowPlaying.MovieProto getMovies(final int index) {
        return this.result.getMovies(index);
      }

      public Builder setMovies(final int index, final NowPlaying.MovieProto value) {
        this.result.movies_.set(index, value);
        return this;
      }

      public Builder setMovies(final int index, final NowPlaying.MovieProto.Builder builderForValue) {
        this.result.movies_.set(index, builderForValue.build());
        return this;
      }

      public Builder addMovies(final NowPlaying.MovieProto value) {
        if (this.result.movies_.isEmpty()) {
          this.result.movies_ = new java.util.ArrayList<NowPlaying.MovieProto>();
        }
        this.result.movies_.add(value);
        return this;
      }

      public Builder addMovies(final NowPlaying.MovieProto.Builder builderForValue) {
        if (this.result.movies_.isEmpty()) {
          this.result.movies_ = new java.util.ArrayList<NowPlaying.MovieProto>();
        }
        this.result.movies_.add(builderForValue.build());
        return this;
      }

      public Builder addAllMovies(final java.lang.Iterable<? extends NowPlaying.MovieProto> values) {
        if (this.result.movies_.isEmpty()) {
          this.result.movies_ = new java.util.ArrayList<NowPlaying.MovieProto>();
        }
        super.addAll(values, this.result.movies_);
        return this;
      }

      public Builder clearMovies() {
        this.result.movies_ = java.util.Collections.emptyList();
        return this;
      }

      // repeated .TheaterListingsProto.TheaterAndMovieShowtimesProto
      // TheaterAndMovieShowtimes = 6;
      public java.util.List<NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto> getTheaterAndMovieShowtimesList() {
        return java.util.Collections.unmodifiableList(this.result.theaterAndMovieShowtimes_);
      }

      public int getTheaterAndMovieShowtimesCount() {
        return this.result.getTheaterAndMovieShowtimesCount();
      }

      public NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto getTheaterAndMovieShowtimes(final int index) {
        return this.result.getTheaterAndMovieShowtimes(index);
      }

      public Builder setTheaterAndMovieShowtimes(final int index, final NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto value) {
        this.result.theaterAndMovieShowtimes_.set(index, value);
        return this;
      }

      public Builder setTheaterAndMovieShowtimes(final int index,
        final NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto.Builder builderForValue) {
        this.result.theaterAndMovieShowtimes_.set(index, builderForValue.build());
        return this;
      }

      public Builder addTheaterAndMovieShowtimes(final NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto value) {
        if (this.result.theaterAndMovieShowtimes_.isEmpty()) {
          this.result.theaterAndMovieShowtimes_ = new java.util.ArrayList<NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto>();
        }
        this.result.theaterAndMovieShowtimes_.add(value);
        return this;
      }

      public Builder addTheaterAndMovieShowtimes(final NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto.Builder builderForValue) {
        if (this.result.theaterAndMovieShowtimes_.isEmpty()) {
          this.result.theaterAndMovieShowtimes_ = new java.util.ArrayList<NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto>();
        }
        this.result.theaterAndMovieShowtimes_.add(builderForValue.build());
        return this;
      }

      public Builder addAllTheaterAndMovieShowtimes(
        final java.lang.Iterable<? extends NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto> values) {
        if (this.result.theaterAndMovieShowtimes_.isEmpty()) {
          this.result.theaterAndMovieShowtimes_ = new java.util.ArrayList<NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto>();
        }
        super.addAll(values, this.result.theaterAndMovieShowtimes_);
        return this;
      }

      public Builder clearTheaterAndMovieShowtimes() {
        this.result.theaterAndMovieShowtimes_ = java.util.Collections.emptyList();
        return this;
      }
    }
  }

  public static final class ReviewProto extends com.google.protobuf.GeneratedMessage {
    // Use ReviewProto.newBuilder() to construct.
    private ReviewProto() {
    }

    private static final ReviewProto defaultInstance = new ReviewProto();

    public static ReviewProto getDefaultInstance() {
      return defaultInstance;
    }

    public ReviewProto getDefaultInstanceForType() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return NowPlaying.internal_static_ReviewProto_descriptor;
    }

    @Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
      return NowPlaying.internal_static_ReviewProto_fieldAccessorTable;
    }

    // optional string Title = 1;
    private boolean hasTitle;
    private java.lang.String title_ = "";

    public boolean hasTitle() {
      return this.hasTitle;
    }

    public java.lang.String getTitle() {
      return this.title_;
    }

    // optional string Url = 2;
    private boolean hasUrl;
    private java.lang.String url_ = "";

    public boolean hasUrl() {
      return this.hasUrl;
    }

    public java.lang.String getUrl() {
      return this.url_;
    }

    // optional float Rating = 3;
    private boolean hasRating;
    private float rating_ = 0F;

    public boolean hasRating() {
      return this.hasRating;
    }

    public float getRating() {
      return this.rating_;
    }

    // optional string Snippet = 4;
    private boolean hasSnippet;
    private java.lang.String snippet_ = "";

    public boolean hasSnippet() {
      return this.hasSnippet;
    }

    public java.lang.String getSnippet() {
      return this.snippet_;
    }

    // optional string Content = 5;
    private boolean hasContent;
    private java.lang.String content_ = "";

    public boolean hasContent() {
      return this.hasContent;
    }

    public java.lang.String getContent() {
      return this.content_;
    }

    // optional string Publisher = 6;
    private boolean hasPublisher;
    private java.lang.String publisher_ = "";

    public boolean hasPublisher() {
      return this.hasPublisher;
    }

    public java.lang.String getPublisher() {
      return this.publisher_;
    }

    // optional string Author = 7;
    private boolean hasAuthor;
    private java.lang.String author_ = "";

    public boolean hasAuthor() {
      return this.hasAuthor;
    }

    public java.lang.String getAuthor() {
      return this.author_;
    }

    // optional string Date = 8;
    private boolean hasDate;
    private java.lang.String date_ = "";

    public boolean hasDate() {
      return this.hasDate;
    }

    public java.lang.String getDate() {
      return this.date_;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public void writeTo(final com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (hasTitle()) {
        output.writeString(1, getTitle());
      }
      if (hasUrl()) {
        output.writeString(2, getUrl());
      }
      if (hasRating()) {
        output.writeFloat(3, getRating());
      }
      if (hasSnippet()) {
        output.writeString(4, getSnippet());
      }
      if (hasContent()) {
        output.writeString(5, getContent());
      }
      if (hasPublisher()) {
        output.writeString(6, getPublisher());
      }
      if (hasAuthor()) {
        output.writeString(7, getAuthor());
      }
      if (hasDate()) {
        output.writeString(8, getDate());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;

    @Override
    public int getSerializedSize() {
      int size = this.memoizedSerializedSize;
      if (size != -1) {
        return size;
      }

      size = 0;
      if (hasTitle()) {
        size += com.google.protobuf.CodedOutputStream.computeStringSize(1, getTitle());
      }
      if (hasUrl()) {
        size += com.google.protobuf.CodedOutputStream.computeStringSize(2, getUrl());
      }
      if (hasRating()) {
        size += com.google.protobuf.CodedOutputStream.computeFloatSize(3, getRating());
      }
      if (hasSnippet()) {
        size += com.google.protobuf.CodedOutputStream.computeStringSize(4, getSnippet());
      }
      if (hasContent()) {
        size += com.google.protobuf.CodedOutputStream.computeStringSize(5, getContent());
      }
      if (hasPublisher()) {
        size += com.google.protobuf.CodedOutputStream.computeStringSize(6, getPublisher());
      }
      if (hasAuthor()) {
        size += com.google.protobuf.CodedOutputStream.computeStringSize(7, getAuthor());
      }
      if (hasDate()) {
        size += com.google.protobuf.CodedOutputStream.computeStringSize(8, getDate());
      }
      size += getUnknownFields().getSerializedSize();
      this.memoizedSerializedSize = size;
      return size;
    }

    public static NowPlaying.ReviewProto parseFrom(final com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static NowPlaying.ReviewProto parseFrom(final com.google.protobuf.ByteString data,
      final com.google.protobuf.ExtensionRegistry extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static NowPlaying.ReviewProto parseFrom(final byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static NowPlaying.ReviewProto parseFrom(final byte[] data, final com.google.protobuf.ExtensionRegistry extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static NowPlaying.ReviewProto parseFrom(final java.io.InputStream input) throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static NowPlaying.ReviewProto parseFrom(final java.io.InputStream input, final com.google.protobuf.ExtensionRegistry extensionRegistry)
      throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static NowPlaying.ReviewProto parseFrom(final com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static NowPlaying.ReviewProto parseFrom(final com.google.protobuf.CodedInputStream input,
      final com.google.protobuf.ExtensionRegistry extensionRegistry) throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static Builder newBuilder() {
      return new Builder();
    }

    public Builder newBuilderForType() {
      return new Builder();
    }

    public static Builder newBuilder(final NowPlaying.ReviewProto prototype) {
      return new Builder().mergeFrom(prototype);
    }

    public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> {
      // Construct using NowPlaying.ReviewProto.newBuilder()
      private Builder() {
      }

      NowPlaying.ReviewProto result = new NowPlaying.ReviewProto();

      @Override
      protected NowPlaying.ReviewProto internalGetResult() {
        return this.result;
      }

      @Override
      public Builder clear() {
        this.result = new NowPlaying.ReviewProto();
        return this;
      }

      @Override
      public Builder clone() {
        return new Builder().mergeFrom(this.result);
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return NowPlaying.ReviewProto.getDescriptor();
      }

      public NowPlaying.ReviewProto getDefaultInstanceForType() {
        return NowPlaying.ReviewProto.getDefaultInstance();
      }

      public NowPlaying.ReviewProto build() {
        if (!isInitialized()) {
          throw new com.google.protobuf.UninitializedMessageException(this.result);
        }
        return buildPartial();
      }

      private NowPlaying.ReviewProto buildParsed() throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw new com.google.protobuf.UninitializedMessageException(this.result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }

      public NowPlaying.ReviewProto buildPartial() {
        final NowPlaying.ReviewProto returnMe = this.result;
        this.result = null;
        return returnMe;
      }

      @Override
      public Builder mergeFrom(final com.google.protobuf.Message other) {
        if (other instanceof NowPlaying.ReviewProto) {
          return mergeFrom((NowPlaying.ReviewProto) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(final NowPlaying.ReviewProto other) {
        if (other == NowPlaying.ReviewProto.getDefaultInstance()) {
          return this;
        }
        if (other.hasTitle()) {
          setTitle(other.getTitle());
        }
        if (other.hasUrl()) {
          setUrl(other.getUrl());
        }
        if (other.hasRating()) {
          setRating(other.getRating());
        }
        if (other.hasSnippet()) {
          setSnippet(other.getSnippet());
        }
        if (other.hasContent()) {
          setContent(other.getContent());
        }
        if (other.hasPublisher()) {
          setPublisher(other.getPublisher());
        }
        if (other.hasAuthor()) {
          setAuthor(other.getAuthor());
        }
        if (other.hasDate()) {
          setDate(other.getDate());
        }
        mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      @Override
      public Builder mergeFrom(final com.google.protobuf.CodedInputStream input) throws java.io.IOException {
        return mergeFrom(input, com.google.protobuf.ExtensionRegistry.getEmptyRegistry());
      }

      @Override
      public Builder mergeFrom(final com.google.protobuf.CodedInputStream input, final com.google.protobuf.ExtensionRegistry extensionRegistry)
        throws java.io.IOException {
        final com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder(getUnknownFields());
        while (true) {
          final int tag = input.readTag();
          switch (tag) {
            case 0:
              setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setTitle(input.readString());
              break;
            }
            case 18: {
              setUrl(input.readString());
              break;
            }
            case 29: {
              setRating(input.readFloat());
              break;
            }
            case 34: {
              setSnippet(input.readString());
              break;
            }
            case 42: {
              setContent(input.readString());
              break;
            }
            case 50: {
              setPublisher(input.readString());
              break;
            }
            case 58: {
              setAuthor(input.readString());
              break;
            }
            case 66: {
              setDate(input.readString());
              break;
            }
          }
        }
      }

      // optional string Title = 1;
      public boolean hasTitle() {
        return this.result.hasTitle();
      }

      public java.lang.String getTitle() {
        return this.result.getTitle();
      }

      public Builder setTitle(final java.lang.String value) {
        this.result.hasTitle = true;
        this.result.title_ = value;
        return this;
      }

      public Builder clearTitle() {
        this.result.hasTitle = false;
        this.result.title_ = "";
        return this;
      }

      // optional string Url = 2;
      public boolean hasUrl() {
        return this.result.hasUrl();
      }

      public java.lang.String getUrl() {
        return this.result.getUrl();
      }

      public Builder setUrl(final java.lang.String value) {
        this.result.hasUrl = true;
        this.result.url_ = value;
        return this;
      }

      public Builder clearUrl() {
        this.result.hasUrl = false;
        this.result.url_ = "";
        return this;
      }

      // optional float Rating = 3;
      public boolean hasRating() {
        return this.result.hasRating();
      }

      public float getRating() {
        return this.result.getRating();
      }

      public Builder setRating(final float value) {
        this.result.hasRating = true;
        this.result.rating_ = value;
        return this;
      }

      public Builder clearRating() {
        this.result.hasRating = false;
        this.result.rating_ = 0F;
        return this;
      }

      // optional string Snippet = 4;
      public boolean hasSnippet() {
        return this.result.hasSnippet();
      }

      public java.lang.String getSnippet() {
        return this.result.getSnippet();
      }

      public Builder setSnippet(final java.lang.String value) {
        this.result.hasSnippet = true;
        this.result.snippet_ = value;
        return this;
      }

      public Builder clearSnippet() {
        this.result.hasSnippet = false;
        this.result.snippet_ = "";
        return this;
      }

      // optional string Content = 5;
      public boolean hasContent() {
        return this.result.hasContent();
      }

      public java.lang.String getContent() {
        return this.result.getContent();
      }

      public Builder setContent(final java.lang.String value) {
        this.result.hasContent = true;
        this.result.content_ = value;
        return this;
      }

      public Builder clearContent() {
        this.result.hasContent = false;
        this.result.content_ = "";
        return this;
      }

      // optional string Publisher = 6;
      public boolean hasPublisher() {
        return this.result.hasPublisher();
      }

      public java.lang.String getPublisher() {
        return this.result.getPublisher();
      }

      public Builder setPublisher(final java.lang.String value) {
        this.result.hasPublisher = true;
        this.result.publisher_ = value;
        return this;
      }

      public Builder clearPublisher() {
        this.result.hasPublisher = false;
        this.result.publisher_ = "";
        return this;
      }

      // optional string Author = 7;
      public boolean hasAuthor() {
        return this.result.hasAuthor();
      }

      public java.lang.String getAuthor() {
        return this.result.getAuthor();
      }

      public Builder setAuthor(final java.lang.String value) {
        this.result.hasAuthor = true;
        this.result.author_ = value;
        return this;
      }

      public Builder clearAuthor() {
        this.result.hasAuthor = false;
        this.result.author_ = "";
        return this;
      }

      // optional string Date = 8;
      public boolean hasDate() {
        return this.result.hasDate();
      }

      public java.lang.String getDate() {
        return this.result.getDate();
      }

      public Builder setDate(final java.lang.String value) {
        this.result.hasDate = true;
        this.result.date_ = value;
        return this;
      }

      public Builder clearDate() {
        this.result.hasDate = false;
        this.result.date_ = "";
        return this;
      }
    }
  }

  public static final class ReviewsListProto extends com.google.protobuf.GeneratedMessage {
    // Use ReviewsListProto.newBuilder() to construct.
    private ReviewsListProto() {
    }

    private static final ReviewsListProto defaultInstance = new ReviewsListProto();

    public static ReviewsListProto getDefaultInstance() {
      return defaultInstance;
    }

    public ReviewsListProto getDefaultInstanceForType() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return NowPlaying.internal_static_ReviewsListProto_descriptor;
    }

    @Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
      return NowPlaying.internal_static_ReviewsListProto_fieldAccessorTable;
    }

    // repeated .ReviewProto reviews = 1;
    private java.util.List<NowPlaying.ReviewProto> reviews_ = java.util.Collections.emptyList();

    public java.util.List<NowPlaying.ReviewProto> getReviewsList() {
      return this.reviews_;
    }

    public int getReviewsCount() {
      return this.reviews_.size();
    }

    public NowPlaying.ReviewProto getReviews(final int index) {
      return this.reviews_.get(index);
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public void writeTo(final com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      for (final NowPlaying.ReviewProto element : getReviewsList()) {
        output.writeMessage(1, element);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;

    @Override
    public int getSerializedSize() {
      int size = this.memoizedSerializedSize;
      if (size != -1) {
        return size;
      }

      size = 0;
      for (final NowPlaying.ReviewProto element : getReviewsList()) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(1, element);
      }
      size += getUnknownFields().getSerializedSize();
      this.memoizedSerializedSize = size;
      return size;
    }

    public static NowPlaying.ReviewsListProto parseFrom(final com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static NowPlaying.ReviewsListProto parseFrom(final com.google.protobuf.ByteString data,
      final com.google.protobuf.ExtensionRegistry extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static NowPlaying.ReviewsListProto parseFrom(final byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static NowPlaying.ReviewsListProto parseFrom(final byte[] data, final com.google.protobuf.ExtensionRegistry extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static NowPlaying.ReviewsListProto parseFrom(final java.io.InputStream input) throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static NowPlaying.ReviewsListProto parseFrom(final java.io.InputStream input,
      final com.google.protobuf.ExtensionRegistry extensionRegistry) throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static NowPlaying.ReviewsListProto parseFrom(final com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static NowPlaying.ReviewsListProto parseFrom(final com.google.protobuf.CodedInputStream input,
      final com.google.protobuf.ExtensionRegistry extensionRegistry) throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static Builder newBuilder() {
      return new Builder();
    }

    public Builder newBuilderForType() {
      return new Builder();
    }

    public static Builder newBuilder(final NowPlaying.ReviewsListProto prototype) {
      return new Builder().mergeFrom(prototype);
    }

    public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> {
      // Construct using NowPlaying.ReviewsListProto.newBuilder()
      private Builder() {
      }

      NowPlaying.ReviewsListProto result = new NowPlaying.ReviewsListProto();

      @Override
      protected NowPlaying.ReviewsListProto internalGetResult() {
        return this.result;
      }

      @Override
      public Builder clear() {
        this.result = new NowPlaying.ReviewsListProto();
        return this;
      }

      @Override
      public Builder clone() {
        return new Builder().mergeFrom(this.result);
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return NowPlaying.ReviewsListProto.getDescriptor();
      }

      public NowPlaying.ReviewsListProto getDefaultInstanceForType() {
        return NowPlaying.ReviewsListProto.getDefaultInstance();
      }

      public NowPlaying.ReviewsListProto build() {
        if (!isInitialized()) {
          throw new com.google.protobuf.UninitializedMessageException(this.result);
        }
        return buildPartial();
      }

      private NowPlaying.ReviewsListProto buildParsed() throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw new com.google.protobuf.UninitializedMessageException(this.result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }

      public NowPlaying.ReviewsListProto buildPartial() {
        if (this.result.reviews_ != java.util.Collections.EMPTY_LIST) {
          this.result.reviews_ = java.util.Collections.unmodifiableList(this.result.reviews_);
        }
        final NowPlaying.ReviewsListProto returnMe = this.result;
        this.result = null;
        return returnMe;
      }

      @Override
      public Builder mergeFrom(final com.google.protobuf.Message other) {
        if (other instanceof NowPlaying.ReviewsListProto) {
          return mergeFrom((NowPlaying.ReviewsListProto) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(final NowPlaying.ReviewsListProto other) {
        if (other == NowPlaying.ReviewsListProto.getDefaultInstance()) {
          return this;
        }
        if (!other.reviews_.isEmpty()) {
          if (this.result.reviews_.isEmpty()) {
            this.result.reviews_ = new java.util.ArrayList<NowPlaying.ReviewProto>();
          }
          this.result.reviews_.addAll(other.reviews_);
        }
        mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      @Override
      public Builder mergeFrom(final com.google.protobuf.CodedInputStream input) throws java.io.IOException {
        return mergeFrom(input, com.google.protobuf.ExtensionRegistry.getEmptyRegistry());
      }

      @Override
      public Builder mergeFrom(final com.google.protobuf.CodedInputStream input, final com.google.protobuf.ExtensionRegistry extensionRegistry)
        throws java.io.IOException {
        final com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder(getUnknownFields());
        while (true) {
          final int tag = input.readTag();
          switch (tag) {
            case 0:
              setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              final NowPlaying.ReviewProto.Builder subBuilder = NowPlaying.ReviewProto.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addReviews(subBuilder.buildPartial());
              break;
            }
          }
        }
      }

      // repeated .ReviewProto reviews = 1;
      public java.util.List<NowPlaying.ReviewProto> getReviewsList() {
        return java.util.Collections.unmodifiableList(this.result.reviews_);
      }

      public int getReviewsCount() {
        return this.result.getReviewsCount();
      }

      public NowPlaying.ReviewProto getReviews(final int index) {
        return this.result.getReviews(index);
      }

      public Builder setReviews(final int index, final NowPlaying.ReviewProto value) {
        this.result.reviews_.set(index, value);
        return this;
      }

      public Builder setReviews(final int index, final NowPlaying.ReviewProto.Builder builderForValue) {
        this.result.reviews_.set(index, builderForValue.build());
        return this;
      }

      public Builder addReviews(final NowPlaying.ReviewProto value) {
        if (this.result.reviews_.isEmpty()) {
          this.result.reviews_ = new java.util.ArrayList<NowPlaying.ReviewProto>();
        }
        this.result.reviews_.add(value);
        return this;
      }

      public Builder addReviews(final NowPlaying.ReviewProto.Builder builderForValue) {
        if (this.result.reviews_.isEmpty()) {
          this.result.reviews_ = new java.util.ArrayList<NowPlaying.ReviewProto>();
        }
        this.result.reviews_.add(builderForValue.build());
        return this;
      }

      public Builder addAllReviews(final java.lang.Iterable<? extends NowPlaying.ReviewProto> values) {
        if (this.result.reviews_.isEmpty()) {
          this.result.reviews_ = new java.util.ArrayList<NowPlaying.ReviewProto>();
        }
        super.addAll(values, this.result.reviews_);
        return this;
      }

      public Builder clearReviews() {
        this.result.reviews_ = java.util.Collections.emptyList();
        return this;
      }
    }
  }

  private static final com.google.protobuf.Descriptors.Descriptor internal_static_ShowtimeProto_descriptor = getDescriptor().getMessageTypes().get(0);
  private static com.google.protobuf.GeneratedMessage.FieldAccessorTable internal_static_ShowtimeProto_fieldAccessorTable = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(
    internal_static_ShowtimeProto_descriptor, new java.lang.String[]{"Time", "Url", "Dubbed", "Subtitled",}, NowPlaying.ShowtimeProto.class,
    NowPlaying.ShowtimeProto.Builder.class);
  private static final com.google.protobuf.Descriptors.Descriptor internal_static_AllShowtimesProto_descriptor = getDescriptor().getMessageTypes()
    .get(1);
  private static com.google.protobuf.GeneratedMessage.FieldAccessorTable internal_static_AllShowtimesProto_fieldAccessorTable = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(
    internal_static_AllShowtimesProto_descriptor, new java.lang.String[]{"Showtimes", "Vendor", "Captioning",}, NowPlaying.AllShowtimesProto.class,
    NowPlaying.AllShowtimesProto.Builder.class);
  private static final com.google.protobuf.Descriptors.Descriptor internal_static_MovieProto_descriptor = getDescriptor().getMessageTypes().get(2);
  private static com.google.protobuf.GeneratedMessage.FieldAccessorTable internal_static_MovieProto_fieldAccessorTable = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(
    internal_static_MovieProto_descriptor,
    new java.lang.String[]{"Identifier", "Title", "Length", "Language", "Genre", "Description", "RawRating", "Score", "IMDbUrl", "Director", "Cast", "Dubbed", "Subtitled", "ReleaseDate",},
    NowPlaying.MovieProto.class, NowPlaying.MovieProto.Builder.class);
  private static final com.google.protobuf.Descriptors.Descriptor internal_static_TheaterProto_descriptor = getDescriptor().getMessageTypes().get(3);
  private static com.google.protobuf.GeneratedMessage.FieldAccessorTable internal_static_TheaterProto_fieldAccessorTable = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(
    internal_static_TheaterProto_descriptor,
    new java.lang.String[]{"Identifier", "Name", "StreetAddress", "City", "State", "PostalCode", "Country", "Phone", "Latitude", "Longitude",},
    NowPlaying.TheaterProto.class, NowPlaying.TheaterProto.Builder.class);
  private static final com.google.protobuf.Descriptors.Descriptor internal_static_TheaterListingsProto_descriptor = getDescriptor().getMessageTypes()
    .get(4);
  private static com.google.protobuf.GeneratedMessage.FieldAccessorTable internal_static_TheaterListingsProto_fieldAccessorTable = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(
    internal_static_TheaterListingsProto_descriptor, new java.lang.String[]{"Movies", "TheaterAndMovieShowtimes",},
    NowPlaying.TheaterListingsProto.class, NowPlaying.TheaterListingsProto.Builder.class);
  private static final com.google.protobuf.Descriptors.Descriptor internal_static_TheaterListingsProto_TheaterAndMovieShowtimesProto_descriptor = internal_static_TheaterListingsProto_descriptor
    .getNestedTypes().get(0);
  private static com.google.protobuf.GeneratedMessage.FieldAccessorTable internal_static_TheaterListingsProto_TheaterAndMovieShowtimesProto_fieldAccessorTable = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(
    internal_static_TheaterListingsProto_TheaterAndMovieShowtimesProto_descriptor, new java.lang.String[]{"Theater", "MovieAndShowtimes",},
    NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto.class, NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto.Builder.class);
  private static final com.google.protobuf.Descriptors.Descriptor internal_static_TheaterListingsProto_TheaterAndMovieShowtimesProto_MovieAndShowtimesProto_descriptor = internal_static_TheaterListingsProto_TheaterAndMovieShowtimesProto_descriptor
    .getNestedTypes().get(0);
  private static com.google.protobuf.GeneratedMessage.FieldAccessorTable internal_static_TheaterListingsProto_TheaterAndMovieShowtimesProto_MovieAndShowtimesProto_fieldAccessorTable = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(
    internal_static_TheaterListingsProto_TheaterAndMovieShowtimesProto_MovieAndShowtimesProto_descriptor,
    new java.lang.String[]{"MovieIdentifier", "Showtimes",},
    NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto.MovieAndShowtimesProto.class,
    NowPlaying.TheaterListingsProto.TheaterAndMovieShowtimesProto.MovieAndShowtimesProto.Builder.class);
  private static final com.google.protobuf.Descriptors.Descriptor internal_static_ReviewProto_descriptor = getDescriptor().getMessageTypes().get(5);
  private static com.google.protobuf.GeneratedMessage.FieldAccessorTable internal_static_ReviewProto_fieldAccessorTable = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(
    internal_static_ReviewProto_descriptor, new java.lang.String[]{"Title", "Url", "Rating", "Snippet", "Content", "Publisher", "Author", "Date",},
    NowPlaying.ReviewProto.class, NowPlaying.ReviewProto.Builder.class);
  private static final com.google.protobuf.Descriptors.Descriptor internal_static_ReviewsListProto_descriptor = getDescriptor().getMessageTypes()
    .get(6);
  private static com.google.protobuf.GeneratedMessage.FieldAccessorTable internal_static_ReviewsListProto_fieldAccessorTable = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(
    internal_static_ReviewsListProto_descriptor, new java.lang.String[]{"Reviews",}, NowPlaying.ReviewsListProto.class,
    NowPlaying.ReviewsListProto.Builder.class);
}
