// Generated by the protocol buffer compiler.  DO NOT EDIT!

#include "google/protobuf/unittest_mset.pb.h"
#include <google/protobuf/descriptor.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format_inl.h>

namespace protobuf_unittest {

namespace {

const ::google::protobuf::Descriptor* TestMessageSet_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestMessageSet_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestMessageSetContainer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestMessageSetContainer_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestMessageSetExtension1_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestMessageSetExtension1_reflection_ = NULL;
const ::google::protobuf::Descriptor* TestMessageSetExtension2_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestMessageSetExtension2_reflection_ = NULL;
const ::google::protobuf::Descriptor* RawMessageSet_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RawMessageSet_reflection_ = NULL;
const ::google::protobuf::Descriptor* RawMessageSet_Item_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RawMessageSet_Item_reflection_ = NULL;

}  // namespace


void protobuf_BuildDesc_google_2fprotobuf_2funittest_5fmset_2eproto_AssignGlobalDescriptors(const ::google::protobuf::FileDescriptor* file) {
  TestMessageSet_descriptor_ = file->message_type(0);
  TestMessageSet::default_instance_ = new TestMessageSet();
  static const int TestMessageSet_offsets_[1] = {
  };
  TestMessageSet_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestMessageSet_descriptor_,
      TestMessageSet::default_instance_,
      TestMessageSet_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessageSet, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessageSet, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessageSet, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      sizeof(TestMessageSet));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestMessageSet_descriptor_, TestMessageSet::default_instance_);
  TestMessageSetContainer_descriptor_ = file->message_type(1);
  TestMessageSetContainer::default_instance_ = new TestMessageSetContainer();
  static const int TestMessageSetContainer_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessageSetContainer, message_set_),
  };
  TestMessageSetContainer_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestMessageSetContainer_descriptor_,
      TestMessageSetContainer::default_instance_,
      TestMessageSetContainer_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessageSetContainer, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessageSetContainer, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      sizeof(TestMessageSetContainer));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestMessageSetContainer_descriptor_, TestMessageSetContainer::default_instance_);
  TestMessageSetExtension1_descriptor_ = file->message_type(2);
  TestMessageSetExtension1::default_instance_ = new TestMessageSetExtension1();
  static const int TestMessageSetExtension1_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessageSetExtension1, i_),
  };
  TestMessageSetExtension1_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestMessageSetExtension1_descriptor_,
      TestMessageSetExtension1::default_instance_,
      TestMessageSetExtension1_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessageSetExtension1, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessageSetExtension1, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      sizeof(TestMessageSetExtension1));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestMessageSetExtension1_descriptor_, TestMessageSetExtension1::default_instance_);
  TestMessageSetExtension2_descriptor_ = file->message_type(3);
  TestMessageSetExtension2::default_instance_ = new TestMessageSetExtension2();
  static const int TestMessageSetExtension2_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessageSetExtension2, str_),
  };
  TestMessageSetExtension2_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestMessageSetExtension2_descriptor_,
      TestMessageSetExtension2::default_instance_,
      TestMessageSetExtension2_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessageSetExtension2, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestMessageSetExtension2, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      sizeof(TestMessageSetExtension2));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestMessageSetExtension2_descriptor_, TestMessageSetExtension2::default_instance_);
  RawMessageSet_descriptor_ = file->message_type(4);
  RawMessageSet::default_instance_ = new RawMessageSet();
  static const int RawMessageSet_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RawMessageSet, item_),
  };
  RawMessageSet_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RawMessageSet_descriptor_,
      RawMessageSet::default_instance_,
      RawMessageSet_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RawMessageSet, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RawMessageSet, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      sizeof(RawMessageSet));
  RawMessageSet_Item_descriptor_ = RawMessageSet_descriptor_->nested_type(0);
  RawMessageSet_Item::default_instance_ = new RawMessageSet_Item();
  static const int RawMessageSet_Item_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RawMessageSet_Item, type_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RawMessageSet_Item, message_),
  };
  RawMessageSet_Item_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RawMessageSet_Item_descriptor_,
      RawMessageSet_Item::default_instance_,
      RawMessageSet_Item_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RawMessageSet_Item, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RawMessageSet_Item, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      sizeof(RawMessageSet_Item));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RawMessageSet_Item_descriptor_, RawMessageSet_Item::default_instance_);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RawMessageSet_descriptor_, RawMessageSet::default_instance_);
  TestMessageSet::default_instance_->InitAsDefaultInstance();
  TestMessageSetContainer::default_instance_->InitAsDefaultInstance();
  TestMessageSetExtension1::default_instance_->InitAsDefaultInstance();
  TestMessageSetExtension2::default_instance_->InitAsDefaultInstance();
  RawMessageSet::default_instance_->InitAsDefaultInstance();
  RawMessageSet_Item::default_instance_->InitAsDefaultInstance();
}

void protobuf_BuildDesc_google_2fprotobuf_2funittest_5fmset_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;
  ::google::protobuf::DescriptorPool* pool =
    ::google::protobuf::DescriptorPool::internal_generated_pool();

  pool->InternalBuildGeneratedFile(
    "\n#google/protobuf/unittest_mset.proto\022\021p"
    "rotobuf_unittest\"\036\n\016TestMessageSet*\010\010\004\020\200"
    "\200\200\200\002:\002\010\001\"Q\n\027TestMessageSetContainer\0226\n\013m"
    "essage_set\030\001 \001(\0132!.protobuf_unittest.Tes"
    "tMessageSet\"\226\001\n\030TestMessageSetExtension1"
    "\022\t\n\001i\030\017 \001(\0052o\n\025message_set_extension\022!.p"
    "rotobuf_unittest.TestMessageSet\030\260\246^ \001(\0132"
    "+.protobuf_unittest.TestMessageSetExtens"
    "ion1\"\230\001\n\030TestMessageSetExtension2\022\013\n\003str"
    "\030\031 \001(\t2o\n\025message_set_extension\022!.protob"
    "uf_unittest.TestMessageSet\030\371\273^ \001(\0132+.pro"
    "tobuf_unittest.TestMessageSetExtension2\""
    "n\n\rRawMessageSet\0223\n\004item\030\001 \003(\n2%.protobu"
    "f_unittest.RawMessageSet.Item\032(\n\004Item\022\017\n"
    "\007type_id\030\002 \002(\005\022\017\n\007message\030\003 \002(\014B\002H\001", 595,
  &protobuf_BuildDesc_google_2fprotobuf_2funittest_5fmset_2eproto_AssignGlobalDescriptors);
}

// Force BuildDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_google_2fprotobuf_2funittest_5fmset_2eproto {
  StaticDescriptorInitializer_google_2fprotobuf_2funittest_5fmset_2eproto() {
    protobuf_BuildDesc_google_2fprotobuf_2funittest_5fmset_2eproto();
  }
} static_descriptor_initializer_google_2fprotobuf_2funittest_5fmset_2eproto_;


// ===================================================================

TestMessageSet::TestMessageSet()
  : ::google::protobuf::Message(),
    _extensions_(&TestMessageSet_descriptor_,
                 ::google::protobuf::DescriptorPool::generated_pool(),
                 ::google::protobuf::MessageFactory::generated_factory()),
    _cached_size_(0) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

void TestMessageSet::InitAsDefaultInstance() {}

TestMessageSet::TestMessageSet(const TestMessageSet& from)
  : ::google::protobuf::Message(),
    _extensions_(&TestMessageSet_descriptor_,
                 ::google::protobuf::DescriptorPool::generated_pool(),
                 ::google::protobuf::MessageFactory::generated_factory()),
    _cached_size_(0) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  MergeFrom(from);
}

TestMessageSet::~TestMessageSet() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* TestMessageSet::descriptor() {
  if (TestMessageSet_descriptor_ == NULL) protobuf_BuildDesc_google_2fprotobuf_2funittest_5fmset_2eproto();
  return TestMessageSet_descriptor_;
}

const TestMessageSet& TestMessageSet::default_instance() {
  if (default_instance_ == NULL) protobuf_BuildDesc_google_2fprotobuf_2funittest_5fmset_2eproto();
  return *default_instance_;
}

TestMessageSet* TestMessageSet::default_instance_ = NULL;

TestMessageSet* TestMessageSet::New() const {
  return new TestMessageSet;
}

void TestMessageSet::Clear() {
  _extensions_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestMessageSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
  return ::google::protobuf::internal::WireFormat::ParseAndMergePartial(
    input, this);
}

bool TestMessageSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  // Extension range [4, 536870912)
  DO_(_extensions_.SerializeWithCachedSizes(
      4, 536870912, *this, output));
  
  if (!unknown_fields().empty()) {
    DO_(::google::protobuf::internal::WireFormat::SerializeUnknownMessageSetItems(
        unknown_fields(), output));
  }
  return true;
#undef DO_
}

int TestMessageSet::ByteSize() const {
  int total_size = 0;
  
  total_size += _extensions_.ByteSize(*this);
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownMessageSetItemsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void TestMessageSet::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestMessageSet* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestMessageSet*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestMessageSet::MergeFrom(const TestMessageSet& from) {
  GOOGLE_CHECK_NE(&from, this);
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestMessageSet::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestMessageSet::CopyFrom(const TestMessageSet& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestMessageSet::Swap(TestMessageSet* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

bool TestMessageSet::IsInitialized() const {
  
  
  if (!_extensions_.IsInitialized()) return false;  return true;
}

const ::google::protobuf::Descriptor* TestMessageSet::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* TestMessageSet::GetReflection() const {
  if (TestMessageSet_reflection_ == NULL) protobuf_BuildDesc_google_2fprotobuf_2funittest_5fmset_2eproto();
  return TestMessageSet_reflection_;
}

// ===================================================================


TestMessageSetContainer::TestMessageSetContainer()
  : ::google::protobuf::Message(),
    _cached_size_(0),
    message_set_(NULL) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

void TestMessageSetContainer::InitAsDefaultInstance() {  message_set_ = const_cast< ::protobuf_unittest::TestMessageSet*>(&::protobuf_unittest::TestMessageSet::default_instance());
}

TestMessageSetContainer::TestMessageSetContainer(const TestMessageSetContainer& from)
  : ::google::protobuf::Message(),
    _cached_size_(0),
    message_set_(NULL) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  MergeFrom(from);
}

TestMessageSetContainer::~TestMessageSetContainer() {
  if (this != default_instance_) {
    delete message_set_;
  }
}

const ::google::protobuf::Descriptor* TestMessageSetContainer::descriptor() {
  if (TestMessageSetContainer_descriptor_ == NULL) protobuf_BuildDesc_google_2fprotobuf_2funittest_5fmset_2eproto();
  return TestMessageSetContainer_descriptor_;
}

const TestMessageSetContainer& TestMessageSetContainer::default_instance() {
  if (default_instance_ == NULL) protobuf_BuildDesc_google_2fprotobuf_2funittest_5fmset_2eproto();
  return *default_instance_;
}

TestMessageSetContainer* TestMessageSetContainer::default_instance_ = NULL;

TestMessageSetContainer* TestMessageSetContainer::New() const {
  return new TestMessageSetContainer;
}

void TestMessageSetContainer::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (message_set_ != NULL) message_set_->::protobuf_unittest::TestMessageSet::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestMessageSetContainer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional .protobuf_unittest.TestMessageSet message_set = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadMessageNoVirtual(
             input, mutable_message_set()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

bool TestMessageSetContainer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  // optional .protobuf_unittest.TestMessageSet message_set = 1;
  if (_has_bit(0)) {
    DO_(::google::protobuf::internal::WireFormat::WriteMessageNoVirtual(1, this->message_set(), output));
  }
  
  if (!unknown_fields().empty()) {
    DO_(::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output));
  }
  return true;
#undef DO_
}

int TestMessageSetContainer::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .protobuf_unittest.TestMessageSet message_set = 1;
    if (has_message_set()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::MessageSizeNoVirtual(
          this->message_set());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void TestMessageSetContainer::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestMessageSetContainer* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestMessageSetContainer*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestMessageSetContainer::MergeFrom(const TestMessageSetContainer& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_message_set()->::protobuf_unittest::TestMessageSet::MergeFrom(from.message_set());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestMessageSetContainer::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestMessageSetContainer::CopyFrom(const TestMessageSetContainer& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestMessageSetContainer::Swap(TestMessageSetContainer* other) {
  if (other != this) {
    std::swap(message_set_, other->message_set_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool TestMessageSetContainer::IsInitialized() const {
  
  if (has_message_set()) {
    if (!this->message_set().IsInitialized()) return false;
  }
  return true;
}

const ::google::protobuf::Descriptor* TestMessageSetContainer::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* TestMessageSetContainer::GetReflection() const {
  if (TestMessageSetContainer_reflection_ == NULL) protobuf_BuildDesc_google_2fprotobuf_2funittest_5fmset_2eproto();
  return TestMessageSetContainer_reflection_;
}

// ===================================================================


::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestMessageSet,
  ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest::TestMessageSetExtension1 > > TestMessageSetExtension1::message_set_extension(1545008);
TestMessageSetExtension1::TestMessageSetExtension1()
  : ::google::protobuf::Message(),
    _cached_size_(0),
    i_(0) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

void TestMessageSetExtension1::InitAsDefaultInstance() {}

TestMessageSetExtension1::TestMessageSetExtension1(const TestMessageSetExtension1& from)
  : ::google::protobuf::Message(),
    _cached_size_(0),
    i_(0) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  MergeFrom(from);
}

TestMessageSetExtension1::~TestMessageSetExtension1() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* TestMessageSetExtension1::descriptor() {
  if (TestMessageSetExtension1_descriptor_ == NULL) protobuf_BuildDesc_google_2fprotobuf_2funittest_5fmset_2eproto();
  return TestMessageSetExtension1_descriptor_;
}

const TestMessageSetExtension1& TestMessageSetExtension1::default_instance() {
  if (default_instance_ == NULL) protobuf_BuildDesc_google_2fprotobuf_2funittest_5fmset_2eproto();
  return *default_instance_;
}

TestMessageSetExtension1* TestMessageSetExtension1::default_instance_ = NULL;

TestMessageSetExtension1* TestMessageSetExtension1::New() const {
  return new TestMessageSetExtension1;
}

void TestMessageSetExtension1::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    i_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestMessageSetExtension1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional int32 i = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadInt32(
              input, &i_));
        _set_bit(0);
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

bool TestMessageSetExtension1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  // optional int32 i = 15;
  if (_has_bit(0)) {
    DO_(::google::protobuf::internal::WireFormat::WriteInt32(15, this->i(), output));
  }
  
  if (!unknown_fields().empty()) {
    DO_(::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output));
  }
  return true;
#undef DO_
}

int TestMessageSetExtension1::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 i = 15;
    if (has_i()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::Int32Size(
          this->i());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void TestMessageSetExtension1::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestMessageSetExtension1* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestMessageSetExtension1*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestMessageSetExtension1::MergeFrom(const TestMessageSetExtension1& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_i(from.i());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestMessageSetExtension1::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestMessageSetExtension1::CopyFrom(const TestMessageSetExtension1& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestMessageSetExtension1::Swap(TestMessageSetExtension1* other) {
  if (other != this) {
    std::swap(i_, other->i_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool TestMessageSetExtension1::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* TestMessageSetExtension1::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* TestMessageSetExtension1::GetReflection() const {
  if (TestMessageSetExtension1_reflection_ == NULL) protobuf_BuildDesc_google_2fprotobuf_2funittest_5fmset_2eproto();
  return TestMessageSetExtension1_reflection_;
}

// ===================================================================

const ::std::string TestMessageSetExtension2::_default_str_;
::google::protobuf::internal::ExtensionIdentifier< ::protobuf_unittest::TestMessageSet,
  ::google::protobuf::internal::MessageTypeTraits< ::protobuf_unittest::TestMessageSetExtension2 > > TestMessageSetExtension2::message_set_extension(1547769);
TestMessageSetExtension2::TestMessageSetExtension2()
  : ::google::protobuf::Message(),
    _cached_size_(0),
    str_(const_cast< ::std::string*>(&_default_str_)) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

void TestMessageSetExtension2::InitAsDefaultInstance() {}

TestMessageSetExtension2::TestMessageSetExtension2(const TestMessageSetExtension2& from)
  : ::google::protobuf::Message(),
    _cached_size_(0),
    str_(const_cast< ::std::string*>(&_default_str_)) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  MergeFrom(from);
}

TestMessageSetExtension2::~TestMessageSetExtension2() {
  if (str_ != &_default_str_) {
    delete str_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* TestMessageSetExtension2::descriptor() {
  if (TestMessageSetExtension2_descriptor_ == NULL) protobuf_BuildDesc_google_2fprotobuf_2funittest_5fmset_2eproto();
  return TestMessageSetExtension2_descriptor_;
}

const TestMessageSetExtension2& TestMessageSetExtension2::default_instance() {
  if (default_instance_ == NULL) protobuf_BuildDesc_google_2fprotobuf_2funittest_5fmset_2eproto();
  return *default_instance_;
}

TestMessageSetExtension2* TestMessageSetExtension2::default_instance_ = NULL;

TestMessageSetExtension2* TestMessageSetExtension2::New() const {
  return new TestMessageSetExtension2;
}

void TestMessageSetExtension2::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (str_ != &_default_str_) {
        str_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestMessageSetExtension2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional string str = 25;
      case 25: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadString(input, mutable_str()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

bool TestMessageSetExtension2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  // optional string str = 25;
  if (_has_bit(0)) {
    DO_(::google::protobuf::internal::WireFormat::WriteString(25, this->str(), output));
  }
  
  if (!unknown_fields().empty()) {
    DO_(::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output));
  }
  return true;
#undef DO_
}

int TestMessageSetExtension2::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string str = 25;
    if (has_str()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormat::StringSize(this->str());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void TestMessageSetExtension2::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestMessageSetExtension2* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestMessageSetExtension2*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestMessageSetExtension2::MergeFrom(const TestMessageSetExtension2& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_str(from.str());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestMessageSetExtension2::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestMessageSetExtension2::CopyFrom(const TestMessageSetExtension2& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestMessageSetExtension2::Swap(TestMessageSetExtension2* other) {
  if (other != this) {
    std::swap(str_, other->str_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool TestMessageSetExtension2::IsInitialized() const {
  
  return true;
}

const ::google::protobuf::Descriptor* TestMessageSetExtension2::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* TestMessageSetExtension2::GetReflection() const {
  if (TestMessageSetExtension2_reflection_ == NULL) protobuf_BuildDesc_google_2fprotobuf_2funittest_5fmset_2eproto();
  return TestMessageSetExtension2_reflection_;
}

// ===================================================================


const ::std::string RawMessageSet_Item::_default_message_;
RawMessageSet_Item::RawMessageSet_Item()
  : ::google::protobuf::Message(),
    _cached_size_(0),
    type_id_(0),
    message_(const_cast< ::std::string*>(&_default_message_)) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

void RawMessageSet_Item::InitAsDefaultInstance() {}

RawMessageSet_Item::RawMessageSet_Item(const RawMessageSet_Item& from)
  : ::google::protobuf::Message(),
    _cached_size_(0),
    type_id_(0),
    message_(const_cast< ::std::string*>(&_default_message_)) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  MergeFrom(from);
}

RawMessageSet_Item::~RawMessageSet_Item() {
  if (message_ != &_default_message_) {
    delete message_;
  }
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* RawMessageSet_Item::descriptor() {
  if (RawMessageSet_Item_descriptor_ == NULL) protobuf_BuildDesc_google_2fprotobuf_2funittest_5fmset_2eproto();
  return RawMessageSet_Item_descriptor_;
}

const RawMessageSet_Item& RawMessageSet_Item::default_instance() {
  if (default_instance_ == NULL) protobuf_BuildDesc_google_2fprotobuf_2funittest_5fmset_2eproto();
  return *default_instance_;
}

RawMessageSet_Item* RawMessageSet_Item::default_instance_ = NULL;

RawMessageSet_Item* RawMessageSet_Item::New() const {
  return new RawMessageSet_Item;
}

void RawMessageSet_Item::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_id_ = 0;
    if (_has_bit(1)) {
      if (message_ != &_default_message_) {
        message_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RawMessageSet_Item::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // required int32 type_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_VARINT) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadInt32(
              input, &type_id_));
        _set_bit(0);
        if (input->ExpectTag(26)) goto parse_message;
        break;
      }
      
      // required bytes message = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_message:
        DO_(::google::protobuf::internal::WireFormat::ReadBytes(input, mutable_message()));
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

bool RawMessageSet_Item::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  // required int32 type_id = 2;
  if (_has_bit(0)) {
    DO_(::google::protobuf::internal::WireFormat::WriteInt32(2, this->type_id(), output));
  }
  
  // required bytes message = 3;
  if (_has_bit(1)) {
    DO_(::google::protobuf::internal::WireFormat::WriteBytes(3, this->message(), output));
  }
  
  if (!unknown_fields().empty()) {
    DO_(::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output));
  }
  return true;
#undef DO_
}

int RawMessageSet_Item::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 type_id = 2;
    if (has_type_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::Int32Size(
          this->type_id());
    }
    
    // required bytes message = 3;
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::BytesSize(this->message());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void RawMessageSet_Item::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RawMessageSet_Item* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RawMessageSet_Item*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RawMessageSet_Item::MergeFrom(const RawMessageSet_Item& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_type_id(from.type_id());
    }
    if (from._has_bit(1)) {
      set_message(from.message());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RawMessageSet_Item::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RawMessageSet_Item::CopyFrom(const RawMessageSet_Item& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RawMessageSet_Item::Swap(RawMessageSet_Item* other) {
  if (other != this) {
    std::swap(type_id_, other->type_id_);
    std::swap(message_, other->message_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool RawMessageSet_Item::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

const ::google::protobuf::Descriptor* RawMessageSet_Item::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* RawMessageSet_Item::GetReflection() const {
  if (RawMessageSet_Item_reflection_ == NULL) protobuf_BuildDesc_google_2fprotobuf_2funittest_5fmset_2eproto();
  return RawMessageSet_Item_reflection_;
}

// -------------------------------------------------------------------


RawMessageSet::RawMessageSet()
  : ::google::protobuf::Message(),
    _cached_size_(0) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

void RawMessageSet::InitAsDefaultInstance() {}

RawMessageSet::RawMessageSet(const RawMessageSet& from)
  : ::google::protobuf::Message(),
    _cached_size_(0) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  MergeFrom(from);
}

RawMessageSet::~RawMessageSet() {
  if (this != default_instance_) {
  }
}

const ::google::protobuf::Descriptor* RawMessageSet::descriptor() {
  if (RawMessageSet_descriptor_ == NULL) protobuf_BuildDesc_google_2fprotobuf_2funittest_5fmset_2eproto();
  return RawMessageSet_descriptor_;
}

const RawMessageSet& RawMessageSet::default_instance() {
  if (default_instance_ == NULL) protobuf_BuildDesc_google_2fprotobuf_2funittest_5fmset_2eproto();
  return *default_instance_;
}

RawMessageSet* RawMessageSet::default_instance_ = NULL;

RawMessageSet* RawMessageSet::New() const {
  return new RawMessageSet;
}

void RawMessageSet::Clear() {
  item_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RawMessageSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // repeated group Item = 1 {
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_START_GROUP) {
          goto handle_uninterpreted;
        }
       parse_item:
        DO_(::google::protobuf::internal::WireFormat::ReadGroupNoVirtual(1, input, add_item()));
        if (input->ExpectTag(11)) goto parse_item;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

bool RawMessageSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  // repeated group Item = 1 {
  for (int i = 0; i < item_.size(); i++) {
    DO_(::google::protobuf::internal::WireFormat::WriteGroupNoVirtual(1, this->item(i), output));
  }
  
  if (!unknown_fields().empty()) {
    DO_(::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output));
  }
  return true;
#undef DO_
}

int RawMessageSet::ByteSize() const {
  int total_size = 0;
  
  // repeated group Item = 1 {
  total_size += 2 * item_size();
  for (int i = 0; i < item_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormat::GroupSizeNoVirtual(
        this->item(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void RawMessageSet::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RawMessageSet* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RawMessageSet*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RawMessageSet::MergeFrom(const RawMessageSet& from) {
  GOOGLE_CHECK_NE(&from, this);
  item_.MergeFrom(from.item_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RawMessageSet::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RawMessageSet::CopyFrom(const RawMessageSet& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RawMessageSet::Swap(RawMessageSet* other) {
  if (other != this) {
    item_.Swap(&other->item_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool RawMessageSet::IsInitialized() const {
  
  for (int i = 0; i < item_size(); i++) {
    if (!this->item(i).IsInitialized()) return false;
  }
  return true;
}

const ::google::protobuf::Descriptor* RawMessageSet::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* RawMessageSet::GetReflection() const {
  if (RawMessageSet_reflection_ == NULL) protobuf_BuildDesc_google_2fprotobuf_2funittest_5fmset_2eproto();
  return RawMessageSet_reflection_;
}

}  // namespace protobuf_unittest
