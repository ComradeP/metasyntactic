// Generated by the protocol buffer compiler.  DO NOT EDIT!

#include "google/protobuf/unittest_embed_optimize_for.pb.h"
#include <google/protobuf/descriptor.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format_inl.h>

namespace protobuf_unittest {

namespace {

const ::google::protobuf::Descriptor* TestEmbedOptimizedForSize_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TestEmbedOptimizedForSize_reflection_ = NULL;

}  // namespace


void protobuf_BuildDesc_google_2fprotobuf_2funittest_5fembed_5foptimize_5ffor_2eproto_AssignGlobalDescriptors(const ::google::protobuf::FileDescriptor* file) {
  TestEmbedOptimizedForSize_descriptor_ = file->message_type(0);
  TestEmbedOptimizedForSize::default_instance_ = new TestEmbedOptimizedForSize();
  static const int TestEmbedOptimizedForSize_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestEmbedOptimizedForSize, optional_message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestEmbedOptimizedForSize, repeated_message_),
  };
  TestEmbedOptimizedForSize_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TestEmbedOptimizedForSize_descriptor_,
      TestEmbedOptimizedForSize::default_instance_,
      TestEmbedOptimizedForSize_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestEmbedOptimizedForSize, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TestEmbedOptimizedForSize, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      sizeof(TestEmbedOptimizedForSize));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TestEmbedOptimizedForSize_descriptor_, TestEmbedOptimizedForSize::default_instance_);
  TestEmbedOptimizedForSize::default_instance_->InitAsDefaultInstance();
}

void protobuf_BuildDesc_google_2fprotobuf_2funittest_5fembed_5foptimize_5ffor_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;
  ::google::protobuf::DescriptorPool* pool =
    ::google::protobuf::DescriptorPool::internal_generated_pool();

  ::protobuf_unittest::protobuf_BuildDesc_google_2fprotobuf_2funittest_5foptimize_5ffor_2eproto();
  pool->InternalBuildGeneratedFile(
    "\n1google/protobuf/unittest_embed_optimiz"
    "e_for.proto\022\021protobuf_unittest\032+google/p"
    "rotobuf/unittest_optimize_for.proto\"\241\001\n\031"
    "TestEmbedOptimizedForSize\022A\n\020optional_me"
    "ssage\030\001 \001(\0132\'.protobuf_unittest.TestOpti"
    "mizedForSize\022A\n\020repeated_message\030\002 \003(\0132\'"
    ".protobuf_unittest.TestOptimizedForSizeB"
    "\002H\001", 283,
  &protobuf_BuildDesc_google_2fprotobuf_2funittest_5fembed_5foptimize_5ffor_2eproto_AssignGlobalDescriptors);
}

// Force BuildDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_google_2fprotobuf_2funittest_5fembed_5foptimize_5ffor_2eproto {
  StaticDescriptorInitializer_google_2fprotobuf_2funittest_5fembed_5foptimize_5ffor_2eproto() {
    protobuf_BuildDesc_google_2fprotobuf_2funittest_5fembed_5foptimize_5ffor_2eproto();
  }
} static_descriptor_initializer_google_2fprotobuf_2funittest_5fembed_5foptimize_5ffor_2eproto_;


// ===================================================================



TestEmbedOptimizedForSize::TestEmbedOptimizedForSize()
  : ::google::protobuf::Message(),
    _cached_size_(0),
    optional_message_(NULL) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

void TestEmbedOptimizedForSize::InitAsDefaultInstance() {  optional_message_ = const_cast< ::protobuf_unittest::TestOptimizedForSize*>(&::protobuf_unittest::TestOptimizedForSize::default_instance());
}

TestEmbedOptimizedForSize::TestEmbedOptimizedForSize(const TestEmbedOptimizedForSize& from)
  : ::google::protobuf::Message(),
    _cached_size_(0),
    optional_message_(NULL) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  MergeFrom(from);
}

TestEmbedOptimizedForSize::~TestEmbedOptimizedForSize() {
  if (this != default_instance_) {
    delete optional_message_;
  }
}

const ::google::protobuf::Descriptor* TestEmbedOptimizedForSize::descriptor() {
  if (TestEmbedOptimizedForSize_descriptor_ == NULL) protobuf_BuildDesc_google_2fprotobuf_2funittest_5fembed_5foptimize_5ffor_2eproto();
  return TestEmbedOptimizedForSize_descriptor_;
}

const TestEmbedOptimizedForSize& TestEmbedOptimizedForSize::default_instance() {
  if (default_instance_ == NULL) protobuf_BuildDesc_google_2fprotobuf_2funittest_5fembed_5foptimize_5ffor_2eproto();
  return *default_instance_;
}

TestEmbedOptimizedForSize* TestEmbedOptimizedForSize::default_instance_ = NULL;

TestEmbedOptimizedForSize* TestEmbedOptimizedForSize::New() const {
  return new TestEmbedOptimizedForSize;
}

void TestEmbedOptimizedForSize::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (_has_bit(0)) {
      if (optional_message_ != NULL) optional_message_->::protobuf_unittest::TestOptimizedForSize::Clear();
    }
  }
  repeated_message_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TestEmbedOptimizedForSize::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormat::GetTagFieldNumber(tag)) {
      // optional .protobuf_unittest.TestOptimizedForSize optional_message = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
        DO_(::google::protobuf::internal::WireFormat::ReadMessageNoVirtual(
             input, mutable_optional_message()));
        if (input->ExpectTag(18)) goto parse_repeated_message;
        break;
      }
      
      // repeated .protobuf_unittest.TestOptimizedForSize repeated_message = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) !=
            ::google::protobuf::internal::WireFormat::WIRETYPE_LENGTH_DELIMITED) {
          goto handle_uninterpreted;
        }
       parse_repeated_message:
        DO_(::google::protobuf::internal::WireFormat::ReadMessageNoVirtual(
             input, add_repeated_message()));
        if (input->ExpectTag(18)) goto parse_repeated_message;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormat::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormat::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

bool TestEmbedOptimizedForSize::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  // optional .protobuf_unittest.TestOptimizedForSize optional_message = 1;
  if (_has_bit(0)) {
    DO_(::google::protobuf::internal::WireFormat::WriteMessageNoVirtual(1, this->optional_message(), output));
  }
  
  // repeated .protobuf_unittest.TestOptimizedForSize repeated_message = 2;
  for (int i = 0; i < repeated_message_.size(); i++) {
    DO_(::google::protobuf::internal::WireFormat::WriteMessageNoVirtual(2, this->repeated_message(i), output));
  }
  
  if (!unknown_fields().empty()) {
    DO_(::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output));
  }
  return true;
#undef DO_
}

int TestEmbedOptimizedForSize::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .protobuf_unittest.TestOptimizedForSize optional_message = 1;
    if (has_optional_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormat::MessageSizeNoVirtual(
          this->optional_message());
    }
    
  }
  // repeated .protobuf_unittest.TestOptimizedForSize repeated_message = 2;
  total_size += 1 * repeated_message_size();
  for (int i = 0; i < repeated_message_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormat::MessageSizeNoVirtual(
        this->repeated_message(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  _cached_size_ = total_size;
  return total_size;
}

void TestEmbedOptimizedForSize::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TestEmbedOptimizedForSize* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TestEmbedOptimizedForSize*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TestEmbedOptimizedForSize::MergeFrom(const TestEmbedOptimizedForSize& from) {
  GOOGLE_CHECK_NE(&from, this);
  repeated_message_.MergeFrom(from.repeated_message_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      mutable_optional_message()->::protobuf_unittest::TestOptimizedForSize::MergeFrom(from.optional_message());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TestEmbedOptimizedForSize::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestEmbedOptimizedForSize::CopyFrom(const TestEmbedOptimizedForSize& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestEmbedOptimizedForSize::Swap(TestEmbedOptimizedForSize* other) {
  if (other != this) {
    std::swap(optional_message_, other->optional_message_);
    repeated_message_.Swap(&other->repeated_message_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

bool TestEmbedOptimizedForSize::IsInitialized() const {
  
  if (has_optional_message()) {
    if (!this->optional_message().IsInitialized()) return false;
  }
  for (int i = 0; i < repeated_message_size(); i++) {
    if (!this->repeated_message(i).IsInitialized()) return false;
  }
  return true;
}

const ::google::protobuf::Descriptor* TestEmbedOptimizedForSize::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* TestEmbedOptimizedForSize::GetReflection() const {
  if (TestEmbedOptimizedForSize_reflection_ == NULL) protobuf_BuildDesc_google_2fprotobuf_2funittest_5fembed_5foptimize_5ffor_2eproto();
  return TestEmbedOptimizedForSize_reflection_;
}

}  // namespace protobuf_unittest
